From: <Saved by Windows Internet Explorer 8>
Subject: The MIDI File Format
Date: Sun, 6 Feb 2011 22:20:13 -0500
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0000_01CBC64C.068E6300"
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.5994

This is a multi-part message in MIME format.

------=_NextPart_000_0000_01CBC64C.068E6300
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://midi.mathewvp.com/aboutMidi.htm

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>The MIDI File Format</TITLE>
<META content=3D"text/html; charset=3Dutf-8" http-equiv=3Dcontent-type>
<META name=3Ddescription=20
content=3D"Free online MIDI Editor for creating polyphonic ringtones =
from scratch,increase,decrease,change ringtone volume,edit the desired =
portion of a midi file,converting from polyphonic ringtone to truetone =
and truetone to polyphonic ringtone formats,transpose octave,change =
tempo of MIDI etc ">
<META name=3Dkeywords=20
content=3D"Free online Midi editor,midi sequencer,cut desired portion of =
polyphonic ringtone,midi to truetone,truetone to polyphonic =
ringtone,increase ringtone volume,decrease ringtone volume,change midi =
volume,polyphonic ringtones from scratch"><LINK=20
rel=3Dstylesheet type=3Dtext/css=20
href=3D"http://midi.mathewvp.com/styles/seqstyle.css"><!--[if IE]>
<STYLE stype=3D"text/css">#leftbotmenu {
	BORDER-BOTTOM: #c6d4e6 1px solid; BORDER-LEFT: #c6d4e6 1px solid; =
PADDING-BOTTOM: 10px; MARGIN: 5px 0px 10px 8px; PADDING-LEFT: 10px; =
WIDTH: 160px; PADDING-RIGHT: 10px; CLEAR: both; BORDER-TOP: #c6d4e6 1px =
solid; BORDER-RIGHT: #c6d4e6 1px solid; PADDING-TOP: 10px
}
</STYLE>
<![endif]-->
<META name=3DGENERATOR content=3D"MSHTML 8.00.6001.18999"></HEAD>
<BODY>
<DIV id=3Dwrap><!--BEGIN HEADER-->
<DIV id=3Dheader>
<H1>Midi File Format</H1>
<P><STRONG>Create your own polyphonic ringtones!</STRONG><BR></P></DIV>
<DIV id=3Dtopnav></DIV><!--BEGIN LEFT NAVIGATION-->
<DIV id=3Dleftwrap>
<DIV id=3Dleftmenu>
<H2>Midi Utilities</H2>
<UL>
  <LI><A title=3D"MIDI Editor Home Page"=20
  href=3D"http://midi.mathewvp.com/index.htm">Home</A>=20
  <LI><A title=3D"Midi Editor" =
href=3D"http://midi.mathewvp.com/midiEditor.htm">Midi=20
  Editor</A>=20
  <LI><A title=3D"Increase/Decrease Midi Volume"=20
  href=3D"http://midi.mathewvp.com/midiVolume.htm">Midi Volume</A>=20
  <LI><A title=3D"Cut/Trim Midi,Reduce ringtone size"=20
  href=3D"http://midi.mathewvp.com/midiTrim.htm">Trim Midi</A>=20
  <LI><A title=3D"Online Midi Sequencer"=20
  href=3D"http://midi.mathewvp.com/midiSequencer.htm">Midi Sequencer</A> =

  <LI><A title=3D"Convert MIDI to RTTL"=20
  href=3D"http://midi.mathewvp.com/midi2RTTL.htm">Midi To RTTL</A>=20
  <LI><A title=3D"Convert RTTL to MIDI"=20
  href=3D"http://midi.mathewvp.com/rttl2Midi.htm">RTTL To Midi</A>=20
  <LI><A title=3D"All about MIDI files"=20
  href=3D"http://midi.mathewvp.com/aboutMidi.htm">About Midi Files</A> =
</LI></UL>
<DIV class=3Ddonate>
<P>
<FORM method=3Dpost =
action=3Dhttps://www.paypal.com/cgi-bin/webscr><INPUT=20
value=3D_s-xclick type=3Dhidden name=3Dcmd> <INPUT border=3D0 =
alt=3D"Support this site"=20
src=3D"https://www.paypal.com/en_US/i/btn/x-click-but21.gif" =
type=3Dimage=20
name=3Dsubmit> <INPUT=20
value=3D"-----BEGIN =
PKCS7-----MIIHFgYJKoZIhvcNAQcEoIIHBzCCBwMCAQExggEwMIIBLAIBADCBlDCBjjELMAk=
GA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQK=
EwtQYXlQYWwgSW5jLjETMBEGA1UECxQKbGl2ZV9jZXJ0czERMA8GA1UEAxQIbGl2ZV9hcGkxH=
DAaBgkqhkiG9w0BCQEWDXJlQHBheXBhbC5jb20CAQAwDQYJKoZIhvcNAQEBBQAEgYC9+8ZT+m=
U81QYceMUUdLRtzQMy2VayAf0ra90XjYGicP/KIJmLuU468cpPq1MZpBJJ5TIsIjiNUqnx3Rq=
dNnYlFVnCp45qwPtDHg9gN6S2PmDI12McgOrvvb5Ool07NKq33A/UZoBfNkYwIKVkr3J+2E+5=
0oCUCLhPvFE2w4RmwzELMAkGBSsOAwIaBQAwgZMGCSqGSIb3DQEHATAUBggqhkiG9w0DBwQIN=
+RTw3LWUQeAcANX6IWyTaumRviWRVrjXKFXG75fEAWg7lRS7+XUCYEzg0N0/0QITifWxrRu7y=
Za37J6BwMHEvI3NchB610Z1JsiqHdVJy8bk0ij5QCWjQgaQR/8vpP2fZlysyehv5/G6AgXsTj=
FvQwLztgfnx2v0amgggOHMIIDgzCCAuygAwIBAgIBADANBgkqhkiG9w0BAQUFADCBjjELMAkG=
A1UEBhMCVVMxCzAJBgNVBAgTAkNBMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRQwEgYDVQQKE=
wtQYXlQYWwgSW5jLjETMBEGA1UECxQKbGl2ZV9jZXJ0czERMA8GA1UEAxQIbGl2ZV9hcGkxHD=
AaBgkqhkiG9w0BCQEWDXJlQHBheXBhbC5jb20wHhcNMDQwMjEzMTAxMzE1WhcNMzUwMjEzMTA=
xMzE1WjCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRYwFAYDVQQHEw1Nb3VudGFpbiBW=
aWV3MRQwEgYDVQQKEwtQYXlQYWwgSW5jLjETMBEGA1UECxQKbGl2ZV9jZXJ0czERMA8GA1UEA=
xQIbGl2ZV9hcGkxHDAaBgkqhkiG9w0BCQEWDXJlQHBheXBhbC5jb20wgZ8wDQYJKoZIhvcNAQ=
EBBQADgY0AMIGJAoGBAMFHTt38RMxLXJyO2SmS+Ndl72T7oKJ4u4uw+6awntALWh03PewmIJu=
zbALScsTS4sZoS1fKciBGoh11gIfHzylvkdNe/hJl66/RGqrj5rFb08sAABNTzDTiqqNpJeBs=
Ys/c2aiGozptX2RlnBktH+SUNpAajW724Nv2Wvhif6sFAgMBAAGjge4wgeswHQYDVR0OBBYEF=
JaffLvGbxe9WT9S1wob7BDWZJRrMIG7BgNVHSMEgbMwgbCAFJaffLvGbxe9WT9S1wob7BDWZJ=
RroYGUpIGRMIGOMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExFjAUBgNVBAcTDU1vdW50YWl=
uIFZpZXcxFDASBgNVBAoTC1BheVBhbCBJbmMuMRMwEQYDVQQLFApsaXZlX2NlcnRzMREwDwYD=
VQQDFAhsaXZlX2FwaTEcMBoGCSqGSIb3DQEJARYNcmVAcGF5cGFsLmNvbYIBADAMBgNVHRMEB=
TADAQH/MA0GCSqGSIb3DQEBBQUAA4GBAIFfOlaagFrl71+jq6OKidbWFSE+Q4FqROvdgIONth=
+8kSK//Y/4ihuE4Ymvzn5ceE3S/iBSQQMjyvb+s2TWbQYDwcp129OPIbD9epdr4tJOUNiSojw=
7BHwYRiPh58S1xGlFgHFXwrEBb3dgNbMUa+u4qectsMAXpVHnD9wIyfmHMYIBmjCCAZYCAQEw=
gZQwgY4xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTEWMBQGA1UEBxMNTW91bnRhaW4gVmlld=
zEUMBIGA1UEChMLUGF5UGFsIEluYy4xEzARBgNVBAsUCmxpdmVfY2VydHMxETAPBgNVBAMUCG=
xpdmVfYXBpMRwwGgYJKoZIhvcNAQkBFg1yZUBwYXlwYWwuY29tAgEAMAkGBSsOAwIaBQCgXTA=
YBgkqhkiG9w0BCQMxCwYJKoZIhvcNAQcBMBwGCSqGSIb3DQEJBTEPFw0wNjAyMTYwODA3MzVa=
MCMGCSqGSIb3DQEJBDEWBBQLQSBGzk/V7NZnsvx7zKOLk73d2DANBgkqhkiG9w0BAQEFAASBg=
H9nhlYEUqel0wlnQrbyHCH5enRCAPFtdN89HqzZNuXVklN/VBhk0m8QLfMudMR5Z1wtnSBuNh=
fkF0xiilweLmXs8U22rpbDLFaxB3wL0RcdqV6nUt8NbBJqTb7FkLrKxCiwWM/KSTzaVHu+IjJ=
Kqjuo3mXbSFXsPzvUBNDGcgGV-----END PKCS7-----&#13;&#10;"=20
type=3Dhidden name=3Dencrypted> </FORM></P></DIV></DIV>
<DIV id=3Dleftbotmenu></DIV></DIV>
<DIV id=3Dcontent><BR>
<H1>The MIDI File Format</H1>
<DIV id=3Dgad>
<SCRIPT type=3Dtext/javascript><!--=0A=
google_ad_client =3D "pub-7667256564687477";=0A=
google_ad_width =3D 468;=0A=
google_ad_height =3D 60;=0A=
google_ad_format =3D "468x60_as";=0A=
google_ad_type =3D "text";=0A=
//2007-05-08: middle=0A=
google_ad_channel =3D "5071432206";=0A=
google_color_border =3D "FFFFFF";=0A=
google_color_bg =3D "FFFFFF";=0A=
google_color_link =3D "286EA0";=0A=
google_color_text =3D "303030";=0A=
google_color_url =3D "999999";=0A=
//-->=0A=
</SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://pagead2.googlesyndication.com/pagead/show_ads.js">=0A=
</SCRIPT>
</DIV><BR>
<P>The <EM>Standard MIDI File</EM> (SMF) is a file format specifically =
designed=20
to store the data that a sequencer records and plays (whether that =
sequencer be=20
software or hardware based).</P>
<P>This format stores the standard MIDI messages (ie, status bytes with=20
appropriate data bytes) plus a time-stamp for each message (ie, a series =
of=20
bytes that represent how many clock pulses to wait before "playing" the =
event).=20
The format allows saving information about tempo, pulses per quarter =
note=20
resolution (or resolution expressed in divisions per second, ie SMPTE =
setting),=20
time and key signatures, and names of tracks and patterns. It can store =
multiple=20
patterns and tracks so that any application can preserve these =
structures when=20
loading the file.</P>
<P><B>NOTE:</B> A <EM>track</EM> usually is analogous to one musical =
part, such=20
as a Trumpet part. A <EM>pattern</EM> would be analogous to all of the =
musical=20
parts (ie, Trumpet, Drums, Piano, etc) for a song, or excerpt of a =
song.</P>
<P>The format was designed to be generic so that any sequencer could =
read or=20
write such a file without losing the most important data, and flexible =
enough=20
for a particular application to store its own proprietary, "extra" data =
in such=20
a way that another application won't be confused when loading the file =
and can=20
safely ignore this extra stuff that it doesn't need. Think of the MIDI =
file=20
format as a musical version of an ASCII text file (except that the MIDI =
file=20
contains binary data too), and the various sequencer programs as text =
editors=20
all capable of reading that file. But, unlike ASCII, MIDI file format =
saves data=20
in <EM>chunks</EM> (ie, groups of bytes preceded by an ID and size) =
which can be=20
parsed, loaded, skipped, etc. Therefore, it can be easily extended to =
include a=20
program's proprietary info. For example, maybe a program wants to save a =
"flag=20
byte" that indicates whether the user has turned on an audible metronome =
click.=20
The program can put this flag byte into a MIDI file in such a way that =
another=20
application can skip this byte without having to understand what that =
byte is=20
for. In the future, the MIDI file format can also be extended to include =
new=20
"official" chunks that all sequencer programs may elect to load and use. =
This=20
can be done without making old data files obsolete (ie, the format is =
designed=20
to be extensible in a backwardly compatible way).</P>
<P></P>
<H2>What's a Chunk?</H2>
<P></P>
<P>Data is always saved within a <EM>chunk</EM>. There can be many =
chunks inside=20
of a MIDI file. Each chunk can be a different size (ie, where size =
refers to how=20
many bytes are contained in the chunk). The data bytes in a chunk are =
related in=20
some way. A chunk is simply a group of related bytes.</P>
<P>Each chunk begins with a 4 character (ie, 4 ascii bytes) <EM>ID</EM> =
which=20
tells what "type" of chunk this is. The next 4 bytes (all bytes are =
comprised of=20
8 bits) form a 32-bit length (ie, size) of the chunk. <B>All chunks must =
begin=20
with these two fields</B> (ie, 8 bytes), which are referred to as the =
<EM>chunk=20
header</EM>.</P>
<P><B>NOTE:</B> The <EM>Length</EM> does not include the 8 byte chunk =
header. It=20
simply tells you how many bytes of data are in the chunk <EM>following =
this=20
header</EM>.</P>
<P>Here's an example header (with bytes expressed in hex):</P>
<P>4D 54 68 64 00 00 00 06</P>
<P>Note that the first 4 bytes make up the ascii ID of <B>MThd</B> (ie, =
the=20
first four bytes are the ascii values for 'M', 'T', 'h', and 'd'). The =
next 4=20
bytes tell us that there should be 6 more data bytes in the chunk (and =
after=20
that we should find the next chunk header or the end of the file).</P>
<P>In fact, all MIDI files begin with this <EM>MThd header</EM> (and =
that's how=20
you know that it's a MIDI file).</P>
<P><B>NOTE:</B> The 4 bytes that make up the <EM>Length</EM> are stored =
in=20
Motorola 68000 byte order, not Intel reverse byte order (ie, the 06 is =
the=20
fourth byte instead of the first of the four). All multiple byte fields =
in a=20
MIDI file follow this standard, often called "Big Endian" form.</P>
<P></P>
<H2>MThd Chunk</H2>
<P></P>
<P>The MThd header has an ID of <B>MThd</B>, and a Length of =
<B>6</B>.</P>
<P>Let's examine the 6 data bytes (which follow the above, 8 byte =
header) in an=20
MThd chunk.</P>
<P>The first two data bytes tell the <EM>Format</EM> (which I prefer to =
call=20
<EM>Type</EM>). There are actually 3 different types (ie, formats) of =
MIDI=20
files. A type of 0 means that the file contains one single track =
containing midi=20
data on possibly all 16 midi channels. If your sequencer sorts/stores =
all of its=20
midi data in one single block of memory with the data in the order that =
it's=20
"played", then it should read/write this type. A type of 1 means that =
the file=20
contains one or more simultaneous (ie, all start from an assumed time of =
0)=20
tracks, perhaps each on a single midi channel. Together, all of these =
tracks are=20
considered one sequence or pattern. If your sequencer separates its midi =
data=20
(i.e. tracks) into different blocks of memory but plays them back =
simultaneously=20
(ie, as one "pattern"), it will read/write this type. A type of 2 means =
that the=20
file contains one or more sequentially independant single-track =
patterns. f your=20
sequencer separates its midi data into different blocks of memory, but =
plays=20
only one block at a time (ie, each block is considered a different =
"excerpt" or=20
"song"), then it will read/write this type.</P>
<P>The next 2 bytes tell how many tracks are stored in the file,=20
<EM>NumTracks</EM>. Of course, for format type 0, this is always 1. For =
the=20
other 2 types, there can be numerous tracks.</P>
<P>The last two bytes indicate how many Pulses (i.e. clocks) Per Quarter =
Note=20
(abbreviated as PPQN) resolution the time-stamps are based upon,=20
<EM>Division</EM>. For example, if your sequencer has 96 ppqn, this =
field would=20
be (in hex):</P>
<P>00 60</P>
<P>Alternately, if the first byte of Division is negative, then this =
represents=20
the division of a second that the time-stamps are based upon. The first =
byte=20
will be -24, -25, -29, or -30, corresponding to the 4 SMPTE standards=20
representing frames per second. The second byte (a positive number) is =
the=20
resolution within a frame (ie, subframe). Typical values may be 4 (MIDI =
Time=20
Code), 8, 10, 80 (SMPTE bit resolution), or 100.</P>
<P>You can specify millisecond-based timing by the data bytes of -25 and =
40=20
subframes.</P>
<P>Here's an example of a complete MThd chunk (with header):</P><PRE>4D =
54 68 64     MThd ID
00 00 00 06     Length of the MThd chunk is always 6.
00 01           The Format type is 1.
00 02           There are 2 MTrk chunks in this file.
E7 28           Each increment of delta-time represents a millisecond.
</PRE>
<H2>MTrk Chunk</H2>
<P>After the MThd chunk, you should find an <EM>MTrk chunk</EM>, as this =
is the=20
only other currently defined chunk. (If you find some other chunk ID, it =
must be=20
proprietary to some other program, so skip it by ignoring the following =
data=20
bytes indicated by the chunk's Length).</P>
<P>An MTrk chunk contains all of the midi data (with timing bytes), plus =

optional non-midi data for <B>one track</B>. Obviously, you should =
encounter as=20
many MTrk chunks in the file as the MThd chunk's NumTracks field =
indicated.</P>
<P>The MTrk header begins with the ID of <EM>MTrk</EM>, followed by the =
Length=20
(ie, number of data bytes to read for this track). The Length will =
likely be=20
different for each track. (After all, a track containing the violin part =
for a=20
Bach concerto will likely contain more data than a track containing a =
simple 2=20
bar drum beat).</P>
<P></P>
<H2>Variable Length Quantities -- Event's Time</H2>
<P></P>
<P>Think of a track in the MIDI file in the same way that you normally =
think of=20
a track in a sequencer. A sequencer track contains a series of =
<EM>events</EM>.=20
For example, the first event in the track may be to sound a middle C =
note. The=20
second event may be to sound the E above middle C. These two events may =
both=20
happen at the same time. The third event may be to release the middle C =
note.=20
This event may happen a few musical beats after the first two events =
(ie, the=20
middle C note is held down for a few musical beats). Each event has a =
"time"=20
when it must occur, and the events are arranged within a "chunk" of =
memory in=20
the order that they occur.</P>
<P>In a MIDI file, an event's "time" precedes the data bytes that make =
up that=20
event itself. In other words, the bytes that make up the event's =
time-stamp come=20
first. A given event's time-stamp is referenced from the previous event. =
For=20
example, if the first event occurs 4 clocks after the start of play, =
then its=20
"delta-time" is 04. If the next event occurs simultaneously with that =
first=20
event, its time is 00. So, a delta-time is the duration (in clocks) =
between an=20
event and the preceding event.</P>
<P><B>NOTE:</B> Since all tracks start with an assumed time of 0, the =
first=20
event's delta-time is referenced from 0.</P>
<P>A delta-time is stored as a series of bytes which is called a =
<EM>variable=20
length quantity</EM>. Only the first 7 bits of each byte is significant=20
(right-justified; sort of like an ASCII byte). So, if you have a 32-bit=20
delta-time, you have to unpack it into a series of 7-bit bytes (ie, as =
if you=20
were going to transmit it over midi in a SYSEX message). Of course, you =
will=20
have a variable number of bytes depending upon your delta-time. To =
indicate=20
which is the last byte of the series, you leave bit #7 clear. In all of =
the=20
preceding bytes, you set bit #7. So, if a delta-time is between 0-127, =
it can be=20
represented as one byte. The largest delta-time allowed is 0FFFFFFF, =
which=20
translates to 4 bytes variable length. Here are examples of delta-times =
as=20
32-bit values, and the variable length quantities that they translate =
to:</P><PRE>NUMBER        VARIABLE QUANTITY
 00000000              00
 00000040              40
 0000007F              7F
 00000080             81 00
 00002000             C0 00
 00003FFF             FF 7F
 00004000           81 80 00
 00100000           C0 80 00
 001FFFFF           FF FF 7F
 00200000          81 80 80 00
 08000000          C0 80 80 00
 0FFFFFFF          FF FF FF 7F
</PRE>Here's some C routines to read and write variable length =
quantities such=20
as delta-times. With <B>WriteVarLen()</B>, you pass a 32-bit value (ie, =
unsigned=20
long) and it spits out the correct series of bytes to a file.=20
<B>ReadVarLen()</B> reads a series of bytes from a file until it reaches =
the=20
last byte of a variable length quantity, and returns a 32-bit value. =
<PRE>void WriteVarLen(register unsigned long value)
{
   register unsigned long buffer;
   buffer =3D value &amp; 0x7F;

   while ( (value &gt;&gt;=3D 7) )
   {
     buffer &lt;&lt;=3D 8;
     buffer |=3D ((value &amp; 0x7F) | 0x80);
   }

   while (TRUE)
   {
      putc(buffer,outfile);
      if (buffer &amp; 0x80)
          buffer &gt;&gt;=3D 8;
      else
          break;
   }
}


doubleword ReadVarLen()
{
    register doubleword value;
    register byte c;

    if ( (value =3D getc(infile)) &amp; 0x80 )
    {
       value &amp;=3D 0x7F;
       do
       {
         value =3D (value &lt;&lt; 7) + ((c =3D getc(infile)) &amp; =
0x7F);
       } while (c &amp; 0x80);
    }

    return(value);
}
</PRE><B>NOTE:</B> The concept of variable length quantities (ie, =
breaking up a=20
large value into a series of bytes) is used with other fields in a MIDI =
file=20
besides delta-times, as you'll see later.=20
<P></P>
<H2>Events</H2>
<P></P>
<P>The first (1 to 4) byte(s) in an MTrk will be the first event's =
delta-time as=20
a variable length quantity. The next data byte is actually the first =
byte of=20
that event itself. I'll refer to this as the event's <EM>Status</EM>. =
For MIDI=20
events, this will be the actual MIDI Status byte (or the first midi data =
byte if=20
running status). For example, if the byte is hex 90, then this event is =
a=20
<EM>Note-On</EM> upon midi channel 0. If for example, the byte was hex =
23, you'd=20
have to recall the previous event's status (ie, midi running status). =
Obviously,=20
the first MIDI event in the MTrk <B>must</B> have a status byte. After a =
midi=20
status byte comes its 1 or 2 data bytes (depending upon the status - =
some MIDI=20
messages only have 1 subsequent data byte). After that you'll find the =
next=20
event's delta time (as a variable quantity) and start the process of =
reading=20
that next event.</P>
<P></P>
<P>SYSEX (system exclusive) events (status =3D F0) are a special case =
because a=20
SYSEX event can be any length. After the F0 status (which is always =
stored -- no=20
running status here), you'll find yet another series of variable length =
bytes.=20
Combine them with ReadVarLen() and you'll come up with a 32-bit value =
that tells=20
you how many more bytes follow which make up this SYSEX event. This =
length=20
doesn't include the F0 status.</P>
<P>For example, consider the following SYSEX MIDI message:</P>
<P>F0 7F 7F 04 01 7F 7F F7</P>
<P>This would be stored in a MIDI file as the following series of bytes =
(minus=20
the delta-time bytes which would precede it):</P>
<P>F0 07 7F 7F 04 01 7F 7F F7</P>
<P>Some midi units send a system exclusive message as a series of small=20
"packets" (with a time delay inbetween transmission of each packet). The =
first=20
packet begins with an F0, but it doesn't end with an F7. The subsequent =
packets=20
don't start with an F0 nor end with F7. The last packet doesn't start =
with an=20
F0, but does end with the F7. So, between the first packet's opening F0 =
and the=20
last packet's closing F7, there's 1 SYSEX message there. (Note: only =
extremely=20
poor designs, such as the crap marketed by Casio exhibit these =
aberrations). Of=20
course, since a delay is needed inbetween each packet, you need to store =
each=20
packet as a separate event with its own time in the MTrk. Also, you need =
some=20
way of knowing which events shouldn't begin with an F0 (ie, all of them =
except=20
the first packet). So, the MIDI file spec redefines a midi status of F7=20
(normally used as an end mark for SYSEX packets) as a way to indicate an =
event=20
that doesn't begin with F0. If such an event follows an F0 event, then =
it's=20
assumed that the F7 event is the second "packet" of a series. In this =
context,=20
it's referred to as a SYSEX CONTINUATION event. Just like the F0 type of =
event,=20
it has a variable length followed by data bytes. On the other hand, the =
F7 event=20
could be used to store MIDI REALTIME or MIDI COMMON messages. In this =
case,=20
after the variable length bytes, you should expect to find a MIDI Status =
byte of=20
F1, F2, F3, F6, F8, FA, FB, FC, or FE. (Note that you wouldn't find any =
such=20
bytes inside of a SYSEX CONTINUATION event). When used in this manner, =
the F7=20
event is referred to as an ESCAPED event.</P>
<P>A status of FF is reserved to indicate a special non-MIDI event. =
(Note that=20
FF is used in MIDI to mean "reset", so it wouldn't be all that useful to =
store=20
in a data file. Therefore, the MIDI file spec arbitrarily redefines the =
use of=20
this status). After the FF status byte is another byte that tells you =
what=20
<EM>Type</EM> of non-MIDI event it is. It's sort of like a second status =
byte.=20
Then after this byte is another byte(s -- a variable length quantity =
again) that=20
tells how many more data bytes follow in this event (ie, its Length). =
This=20
Length doesn't include the FF, Type byte, nor the Length byte. These =
special,=20
non-MIDI events are called <EM>Meta-Events</EM>, and most are optional =
unless=20
otherwise noted. What follows are some defined Meta-Events (including =
the FF=20
Status and Length). Note that unless otherwise mentioned, more than one =
of these=20
events can be placed in an Mtrk (even the same Meta-Event) at any =
delta-time.=20
(Just like all midi events, Meta-Events have a delta-time from the =
previous=20
event regardless of what type of event that may be. So, you can freely =
intermix=20
MIDI and Meta events).</P>
<P></P>
<H3>Sequence Number</H3>
<P></P>
<P>FF 00 02 ss ss</P>
<P>This optional event which must occur at the beginning of a MTrk (ie, =
before=20
any non-zero delta-times and before any midi events) specifies the =
number of a=20
sequence. The two data bytes <B>ss ss</B>, are that number which =
corresponds to=20
the <EM>MIDI Cue</EM> message. In a format 2 MIDI file, this number =
identifies=20
each "pattern" (ie, Mtrk) so that a "song" sequence can use the MIDI Cue =
message=20
to refer to patterns. If the <B>ss ss</B> numbers are omitted (ie, =
Length byte =3D=20
0 instead of 2), then the MTrk's location in the file is used (ie, the =
first=20
MTrk chunk is the first pattern). In format 0 or 1, which contain only =
one=20
"pattern" (even though format 1 contains several MTrks), this event is =
placed in=20
only the first MTrk. So, a group of format 1 files with different =
sequence=20
numbers can comprise a "song collection".</P>
<P>There can be only one of these events per MTrk chunk in a Format 2. =
There can=20
be only one of these events in a Format 0 or 1, and it must be in the =
first=20
MTrk.</P>
<P></P>
<H3>Text</H3>
<P></P>
<P>FF 01 len text</P>
<P>Any amount of text (amount of bytes =3D <B>len</B>) for any purpose. =
It's best=20
to put this event at the beginning of an MTrk. Although this text could =
be used=20
for any purpose, there are other text-based Meta-Events for such things =
as=20
orchestration, lyrics, track name, etc. This event is primarily used to =
add=20
"comments" to a MIDI file which a program would be expected to ignore =
when=20
loading that file.</P>
<P>Note that <B>len</B> could be a series of bytes since it is expressed =
as a=20
variable length quantity.</P>
<P></P>
<H3>Copyright</H3>
<P></P>
<P>FF 02 len text</P>
<P>A copyright message (ie, text). It's best to put this event at the =
beginning=20
of an MTrk.</P>
<P>Note that <B>len</B> could be a series of bytes since it is expressed =
as a=20
variable length quantity.</P>
<P></P>
<H3>Sequence/Track Name</H3>
<P></P>
<P>FF 03 len text</P>
<P>The name of the sequence or track (ie, text). It's best to put this =
event at=20
the beginning of an MTrk.</P>
<P>Note that <B>len</B> could be a series of bytes since it is expressed =
as a=20
variable length quantity.</P>
<P></P>
<H3>Instrument</H3>
<P></P>
<P>FF 04 len text</P>
<P>The name of the instrument that the track plays (ie, text). This =
might be=20
different than the Sequence/Track Name. For example, maybe the name of =
your=20
sequence (ie, Mtrk) is "Butterfly", but since the track is played on a =
piano,=20
you might also include an Instrument Name of "Piano".</P>
<P>It's best to put one (or more) of this event at the beginning of an =
MTrk to=20
provide the user with identification of what instrument(s) is playing =
the track.=20
Usually, the instruments (ie, patches, tones, banks, etc) are setup on =
the audio=20
devices via <EM>MIDI Program Change</EM> events within the MTrk, =
particularly in=20
MIDI files that are intended for <EM>General MIDI Sound Modules</EM>. =
So, this=20
event exists merely to provide the user with visual feedback of the=20
instrumentation for a track.</P>
<P>Note that <B>len</B> could be a series of bytes since it is expressed =
as a=20
variable length quantity.</P>
<P></P>
<H3>Lyric</H3>
<P></P>
<P>FF 05 len text</P>
<P>A song lyric (ie, text) which occurs on a given beat. A single Lyric=20
MetaEvent should contain only one syllable.</P>
<P>Note that <B>len</B> could be a series of bytes since it is expressed =
as a=20
variable length quantity.</P>
<P></P>
<H3>Marker</H3>
<P></P>
<P>FF 06 len text</P>
<P>A marker (ie, text) which occurs on a given beat. Marker events might =
be used=20
to denote a loop start and loop end (ie, where the sequence loops back =
to a=20
previous event).</P>
<P>Note that <B>len</B> could be a series of bytes since it is expressed =
as a=20
variable length quantity.</P>
<P></P>
<H3>Cue Point</H3>
<P></P>
<P>FF 07 len text</P>
<P>A cue point (ie, text) which occurs on a given beat. A Cue Point =
might be=20
used to denote where a WAVE (ie, sampled sound) file starts playing, =
where the=20
<B>text</B> would be the WAVE's filename.</P>
<P>Note that <B>len</B> could be a series of bytes since it is expressed =
as a=20
variable length quantity.</P>
<P></P>
<H3>MIDI Channel</H3>
<P></P>
<P>FF 20 01 cc</P>
<P>This optional event which normally occurs at the beginning of an MTrk =
(ie,=20
before any non-zero delta-times and before any MetaEvents except =
Sequence=20
Number) specifies to which MIDI Channel any subsequent MetaEvent or =
System=20
Exclusive events are associated. The data byte <B>cc</B>, is the MIDI =
channel,=20
where 0 would be the first channel.</P>
<P>The MIDI spec does not give a MIDI channel to System Exclusive =
events. Nor do=20
MetaEvents have an imbedded channel. When creating a Format 0 MIDI file, =
all of=20
the System Exclusive and MetaEvents go into one track, so its hard to =
associate=20
these events with respective MIDI Voice messages. (ie, For example, if =
you=20
wanted to name the musical part on MIDI channel 1 "Flute Solo", and the =
part on=20
MIDI Channel 2 "Trumpet Solo", you'd need to use 2 Track Name =
MetaEvents. Since=20
both events would be in the one track of a Format 0 file, in order to=20
distinguish which track name was associated with which MIDI channel, you =
would=20
place a MIDI Channel MetaEvent with a channel number of 0 before the =
"Flute=20
Solo" Track Name MetaEvent, and then place another MIDI Channel =
MetaEvent with a=20
channel number of 1 before the "Trumpet Solo" Track Name MetaEvent.</P>
<P>It is acceptable to have more than one MIDI channel event in a given =
track,=20
if that track needs to associate various events with various channels. =
</P>
<P></P>
<H3>MIDI Port</H3>
<P></P>
<P>FF 21 01 pp</P>
<P>This optional event which normally occurs at the beginning of an MTrk =
(ie,=20
before any non-zero delta-times and before any midi events) specifies =
out of=20
which MIDI Port (ie, buss) the MIDI events in the MTrk go. The data byte =

<B>pp</B>, is the port number, where 0 would be the first MIDI buss in =
the=20
system.</P>
<P>The MIDI spec has a limit of 16 MIDI channels per MIDI input/output =
(ie,=20
port, buss, jack, or whatever terminology you use to describe the =
hardware for a=20
single MIDI input/output). The MIDI channel number for a given event is =
encoded=20
into the lowest 4 bits of the event's Status byte. Therefore, the =
channel number=20
is always 0 to 15. Many MIDI interfaces have multiple MIDI input/output =
busses=20
in order to work around limitations in the MIDI bandwidth (ie, allow the =
MIDI=20
data to be sent/received more efficiently to/from several external =
modules), and=20
to give the musician more than 16 MIDI Channels. Also, some sequencers =
support=20
more than one MIDI interface used for simultaneous input/output. =
Unfortunately,=20
there is no way to encode more than 16 MIDI channels into a MIDI status =
byte, so=20
a method was needed to identify events that would be output on, for =
example,=20
channel 1 of the second MIDI port versus channel 1 of the first MIDI =
port. This=20
MetaEvent allows a sequencer to identify which MTrk events get sent out =
of which=20
MIDI port. The MIDI events following a MIDI Port MetaEvent get sent out =
that=20
specified port.</P>
<P>It is acceptable to have more than one Port event in a given track, =
if that=20
track needs to output to another port at some point in the track. </P>
<P></P>
<H3>End of Track</H3>
<P></P>
<P>FF 2F 00</P>
<P>This event is NOT optional. It must be the last event in every MTrk. =
It's=20
used as a definitive marking of the end of an MTrk. Only 1 per MTrk.</P>
<P></P>
<H3>Tempo</H3>
<P></P>
<P>FF 51 03 tt tt tt</P>
<P>Indicates a tempo change. The 3 data bytes of <B>tt tt tt</B> are the =
tempo=20
in microseconds per quarter note. In other words, the microsecond tempo =
value=20
tells you how long each one of your sequencer's "quarter notes" should =
be. For=20
example, if you have the 3 bytes of 07 A1 20, then each quarter note =
should be=20
0x07A120 (or 500,000) microseconds long.</P>
<P>So, the MIDI file format expresses tempo as "the amount of time (ie,=20
microseconds) per quarter note".</P>
<H4>BPM</H4>Normally, musicians express tempo as "the amount of quarter =
notes in=20
every minute (ie, time period)". This is the opposite of the way that =
the MIDI=20
file format expresses it.=20
<P>When musicians refer to a "beat" in terms of tempo, they are =
referring to a=20
quarter note (ie, a quarter note is always 1 beat when talking about =
tempo,=20
regardless of the time signature. Yes, it's a bit confusing to =
non-musicians=20
that the time signature's "beat" may not be the same thing as the =
tempo's "beat"=20
-- it won't be unless the time signature's beat also happens to be a =
quarter=20
note. But that's the traditional definition of BPM tempo). To a =
musician, tempo=20
is therefore always "how many quarter notes happen during every minute". =

Musicians refer to this measurement as BPM (ie, Beats Per Minute). So a =
tempo of=20
100 BPM means that a musician must be able to play 100 steady quarter =
notes, one=20
right after the other, in one minute. That's how "fast" the "musical =
tempo" is=20
at 100 BPM. It's very important that you understand the concept of how a =

musician expresses "musical tempo" (ie, BPM) in order to properly =
present tempo=20
settings to a musician, and yet be able to relate it to how the MIDI =
file format=20
expresses tempo.</P>
<P>To convert the MIDI file format's tempo (ie, the 3 bytes that specify =
the=20
amount of microseconds per quarter note) to BPM:</P>
<P>BPM =3D 60,000,000/(tt tt tt)</P>
<P>For example, a tempo of 120 BPM =3D 07 A1 20.</P>
<P>So why does the MIDI file format use "time per quarter note" instead =
of=20
"quarter notes per time" to specify its tempo? Well, its easier to =
specify more=20
precise tempos with the former. With BPM, sometimes you have to deal =
with=20
fractional tempos (for example, 100.3 BPM) if you want to allow a finer=20
resolution to the tempo. Using microseconds to express tempo offers =
plenty of=20
resolution.</P>
<P>Also, SMPTE is a time-based protocol (ie, it's based upon seconds, =
minutes,=20
and hours, rather than a musical tempo). Therefore it's easier to relate =
the=20
MIDI file's tempo to SMPTE timing if you express it as microseconds. =
Many=20
musical devices now use SMPTE to sync their playback.</P>
<H4>PPQN Clock</H4>A sequencer typically uses some internal hardware =
timer=20
counting off steady time (ie, microseconds perhaps) to generate a =
software "PPQN=20
clock" that counts off the timebase (Division) "ticks". In this way, the =
time=20
upon which an event occurs can be expressed to the musician in terms of =
a=20
musical bar:beat:PPQN-tick rather than how many microseconds from the =
start of=20
the playback. Remember that musicians always think in terms of a beat, =
not the=20
passage of seconds, minutes, etc.=20
<P>As mentioned, the microsecond tempo value tells you how long each one =
of your=20
sequencer's "quarter notes" should be. From here, you can figure out how =
long=20
each one of your sequencer's PPQN clocks should be by dividing that =
microsecond=20
value by your MIDI file's Division. For example, if your MIDI file's =
Division is=20
96 PPQN, then that means that each of your sequencer's PPQN clock ticks =
at the=20
above tempo should be 500,000 / 96 (or 5,208.3) microseconds long (ie, =
there=20
should be 5,208.3 microseconds in between each PPQN clock tick in order =
to yield=20
a tempo of 120 BPM at 96 PPQN. And there should always be 96 of these =
clock=20
ticks in each quarter note, 48 ticks in each eighth note, 24 ticks in =
each=20
sixteenth, etc).</P>
<P>Note that you can have any timebase at any tempo. For example, you =
can have a=20
96 PPQN file playing at 100 BPM just as you can have a 192 PPQN file =
playing at=20
100 BPM. You can also have a 96 PPQN file playing at either 100 BPM or =
120 BPM.=20
Timebase and tempo are two entirely separate quantities. Of course, they =
both=20
are needed when you setup your hardware timer (ie, when you set how many =

microseconds are in each PPQN tick). And of course, at slower tempos, =
your PPQN=20
clock tick is going to be longer than at faster tempos.</P>
<H4>MIDI Clock</H4>MIDI clock bytes are sent over MIDI, in order to sync =
the=20
playback of 2 devices (ie, one device is generating MIDI clocks at its =
current=20
tempo which it internally counts off, and the other device is syncing =
its=20
playback to the receipt of these bytes). Unlike with SMPTE frames, MIDI =
clock=20
bytes are sent at a rate related to the musical tempo.=20
<P>Since there are 24 MIDI Clocks in every quarter note, the length of a =
MIDI=20
Clock (ie, time inbetween each MIDI Clock message) is the microsecond =
tempo=20
divided by 24. In the above example, that would be 500,000/24, or =
20,833.3=20
microseconds in every MIDI Clock. Alternately, you can relate this to =
your=20
timebase (ie, PPQN clock). If you have 96 PPQN, then that means that a =
MIDI=20
Clock byte must occur every 96 / 24 (ie, 4) PPQN clocks.</P>
<H4>SMPTE</H4>SMPTE counts off the passage of time in terms of seconds, =
minutes,=20
and hours (ie, the way that non-musicians count time). It also breaks =
down the=20
seconds into smaller units called "frames". The movie industry created =
SMPTE,=20
and they adopted 4 different frame rates. You can divide a second into =
24, 25,=20
29, or 30 frames. Later on, even finer resolution was needed by musical =
devices,=20
and so each frame was broken down into "subframes".=20
<P>So, SMPTE is not directly related to musical tempo. SMPTE time =
doesn't vary=20
with "musical tempo".</P>
<P>Many devices use SMPTE to sync their playback. If you need to =
sychronize with=20
such a device, then you may need to deal with SMPTE timing. Of course, =
you're=20
probably still going to have to maintain some sort of PPQN clock, based =
upon the=20
passing SMPTE subframes, so that the user can adjust the tempo of the =
playback=20
in terms of BPM, and can consider the time of each event in terms of=20
bar:beat:tick. But since SMPTE doesn't directly relate to musical tempo, =
you=20
have to interpolate (ie, calculate) your PPQN clocks from the passing of =

subframes/frames/seconds/minutes/hours (just as we previously calculated =
the=20
PPQN clock from a hardware timer counting off microseconds).</P>
<P>Let's take the easy example of 25 Frames and 40 SubFrames. As =
previously=20
mentioned in the discussion of Division, this is analogous to =
millisecond based=20
timing because you have 1,000 SMPTE subframes per second. (You have 25 =
frames=20
per second. Each second is divided up into 40 subframes, and you =
therefore have=20
25 * 40 subframes per second. And remember that 1,000 milliseconds are =
also in=20
every second). Every millisecond therefore means that another subframe =
has=20
passed (and vice versa). Every time you count off 40 subframes, a SMPTE =
frame=20
has passed (and vice versa). Etc.</P>
<P>Let's assume you desire 96 PPQN and a tempo of 500,000 microseconds.=20
Considering that with 25-40 Frame-SubFrame SMPTE timing 1 millisecond =
=3D 1=20
subframe (and remember that 1 millisecond =3D 1,000 microseconds), there =
should be=20
500,000 / 1,000 (ie, 500) subframes per quarter note. Since you have 96 =
PPQN in=20
every quarter note, then every PPQN ends up being 500 / 96 subframes =
long, or=20
5.2083 milliseconds (ie, there's how we end up with that 5,208.3 =
microseconds=20
PPQN clock tick just as we did above in discussing PPQN clock). And =
since 1=20
millisecond =3D 1 subframe, every PPQN clock tick also equals 5.2083 =
subframes at=20
the above tempo and timebase.</P>
<H4>Conclusions</H4>
<P>BPM =3D 60,000,000/MicroTempo <BR>MicrosPerPPQN =3D =
MicroTempo/TimeBase=20
<BR>MicrosPerMIDIClock =3D MicroTempo/24 <BR>PPQNPerMIDIClock =3D =
TimeBase/24=20
<BR>MicrosPerSubFrame =3D 1000000 * Frames * SubFrames =
<BR>SubFramesPerQuarterNote=20
=3D MicroTempo/(Frames * SubFrames) <BR>SubFramesPerPPQN =3D=20
SubFramesPerQuarterNote/TimeBase <BR>MicrosPerPPQN =3D SubFramesPerPPQN =
* Frames *=20
SubFrames</P>
<P></P>
<H3>SMPTE Offset</H3>
<P></P>
<P>FF 54 05 hr mn se fr ff</P>
<P>Designates the SMPTE start time (hours, minutes, secs, frames, =
subframes) of=20
the MTrk. It should be at the start of the MTrk. The hour should not be =
encoded=20
with the SMPTE format as it is in <EM>MIDI Time Code</EM>. In a format 1 =
file,=20
the SMPTE OFFSET must be stored with the tempo map (ie, the first MTrk), =
and has=20
no meaning in any other MTrk. The <B>ff</B> field contains fractional =
frames in=20
100ths of a frame, even in SMPTE based MTrks which specify a different =
frame=20
subdivision for delta-times (ie, different from the subframe setting in =
the=20
MThd).</P>
<P></P>
<H3>Time Signature</H3>
<P></P>
<P>FF 58 04 nn dd cc bb</P>
<P>Time signature is expressed as 4 numbers. <B>nn</B> and <B>dd</B> =
represent=20
the "numerator" and "denominator" of the signature as notated on sheet =
music.=20
The denominator is a negative power of 2: 2 =3D quarter note, 3 =3D =
eighth, etc. The=20
<B>cc</B> expresses the number of MIDI clocks in a metronome click. The=20
<B>bb</B> parameter expresses the number of notated 32nd notes in a MIDI =
quarter=20
note (24 MIDI clocks). This event allows a program to relate what MIDI =
thinks of=20
as a quarter, to something entirely different. For example, 6/8 time =
with a=20
metronome click every 3 eighth notes and 24 clocks per quarter note =
would be the=20
following event:</P>
<P>FF 58 04 06 03 18 08</P>
<P></P>
<H3>Key Signature</H3>
<P></P>
<P>FF 59 02 sf mi</P>
<P><B>sf</B> =3D -7 for 7 flats, -1 for 1 flat, etc, 0 for key of c, 1 =
for 1=20
sharp, etc.</P>
<P><B>mi</B> =3D 0 for major, 1 for minor</P>
<P></P>
<H3>Proprietary Event</H3>
<P></P>
<P>FF 7F len data...</P>
<P>This can be used by a program to store proprietary data. The first =
byte(s)=20
should be a unique ID of some sort so that a program can identity =
whether the=20
event belongs to it, or to some other program. A 4 character (ie, ascii) =
ID is=20
recommended for such.</P>
<P>Note that <B>len</B> could be a series of bytes since it is expressed =
as a=20
variable length quantity.</P>
<HR>

<P></P>
<H2>Errata</H2>
<P></P>
<P>In a format 0 file, the tempo and time signature changes are =
scattered=20
throughout the one MTrk. In format 1, the very first MTrk should consist =
of just=20
the tempo and time signature events so that it could be read by some =
device=20
capable of generating a "tempo map". In format 2, each MTrk should begin =
with at=20
least one initial tempo and time signature event.</P>
<P><B>NOTE:</B> If there are no tempo and time signature events in a =
MIDI file,=20
assume 120 BPM and 4/4.</P>
<P></P>
<H2>RMID Files</H2>
<P></P>
<P>The method of saving data in chunks (ie, where the data is preceded =
by an 8=20
byte header consisting of a 4 char ID and a 32-bit size field) is the =
basis for=20
Interchange File Format. You should now read the article <A=20
href=3D"http://dasdeck.de/staff/valentin/midi/aboutiff.htm">About =
Interchange File=20
Format</A> for background information.</P>
<P>As mentioned, MIDI File format is a "broken" IFF. It lacks a file =
header at=20
the start of the file. One bad thing about this is that a standard IFF =
parsing=20
routine will choke on a MIDI file (because it will expect the first 12 =
bytes to=20
be the group ID, filesize, and type ID fields). In order to fix the MIDI =
File=20
format so that it strictly adheres to IFF, Microsoft simply made up a =
12-byte=20
header that is prepended to MIDI files, and thereby came up with the =
RMID=20
format. An RMID file begins with the group ID (4 ascii chars) of 'R', =
'I', 'F',=20
'F', followed by the 32-bit filesize field, and then the type ID of 'R', =
'M',=20
'I', 'D'. Then, the chunks of a MIDI file follow (ie, the MThd and MTrk =
chunks).=20
If you chop off the first 12 bytes of an RMID file, then you end up with =
a=20
standard MIDI file.</P>
<P>Note that chunks within a MIDI file are <B>not</B> padded out (with =
an extra=20
0 byte) to an even number of bytes. I don't know as if the RMID format =
corrects=20
this aberration of the MIDI file format too.</P></DIV>
<DIV id=3Dfooter>Copyright =C2=A9 2005 </DIV></DIV>
<SCRIPT type=3Dtext/javascript=20
src=3D"http://www.google-analytics.com/urchin.js">=0A=
</SCRIPT>

<SCRIPT type=3Dtext/javascript>=0A=
_uacct =3D "UA-108453-3";=0A=
urchinTracker();=0A=
</SCRIPT>
</BODY></HTML>

------=_NextPart_000_0000_01CBC64C.068E6300
Content-Type: image/gif
Content-Transfer-Encoding: base64
Content-Location: https://www.paypal.com/en_US/i/btn/x-click-but21.gif

R0lGODlhbgAXAPcDAP/WmP+oIv+sLMwAAP/Tjk1QVf/Og/+9WCA8aIhtRP/Xmf/LgP+9WU1VY//d
qWpgUCA6Yv/Ogltlck1bcE1ZbaZ8PC9CX5d1QFtjb+GZK9UiE/+oIf/Tj3lmSFtXUcSaXD5JWWpf
TT5JW9KVN4iDesSLM9KSL9KaRP+eDv/kuy9BXv+hFOG/ifDEgS9GayA6YyA9aT5QbS9GavDJi1te
YmptcT5Qa1tYVPC0WvChJohvSSA7ZfCqP+G7f5eNfPDQnXlvYLWhgcSnfLWGPsSOO3l5d9KjW7Wd
eoiGg4h4X8SSR//boz5MY7WjiP+5Ty9Hbf/CZXl6fFtldeGiQeGdM/+5Tnl2cv+tLnl2c6aJXv/g
r+GsWv+sK2pvdf/mwXl8gKZ+QvCkMP+9V9K1hv/Mfv/hs//cppeAX8Swki9EZP+zQv/OgWpmYZeO
goiAdP/kuf2rQP+mIf+0Rf6zSf/BY/+xO/7AaYiEf01bcqaXf//Id6aZhvDNltcmD/+zQf+kHoh4
YLWSXf/Phf+nI/++Xv6gGv+2RpeNfZeAXv6hGv6iGYiFf/+qLf2cFP/eq7Wmjk1cc/7Cbf7LfpeK
dv/Wl+G/iv+jGf+sLf/Wlf/VlP2yTv+iFeHFmv/Ynf+lIf+uNP/Znv+vOf66WP6wQj5Qbs4FAk1R
WP/BZ/+gEf/Ukv/AYv/PhNAWFP7Lff6jIf+sLv+yO/+wOf+lHmpweaaUeP/erKaZhf+2Rf/Mff/d
p/+6UmpxfP+mIP/Ri//juP60SaaJXf+oJv++Xf/jt//Vlv+iGP/aof7Lf/+yPP/eqv/frf7Db//m
v//kuv/nwf/hsv/DZ//Xm/+6UP/NfxIzZveXOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAEAAAMALAAAAABuABcA
AAj/AAcIHFCtoMGDCBMqXMiwocOHEB0OHFjtD6FWxzJqPLZg48aOGheA9BiSpMmTH0tmHLkSZUuU
HSWdYlSN4i9Kw5jp3Mmzp8+fQIMKHUq0aNA3ZkTVHKAolbOnUKM+9SK1qtWrWLNq3Up1K9YlngjK
8tWsrNmzaMumSMu2bbO1btXGnYsWLt24agqq0fKsr9+/fcsAHky4sOHDiBMLTmxYC52Ccswkm0y5
suXJDiw7yHy5s+fKmz9zFo35s+nOuVQV9NPJmOvXrzlRo4bEGJrZtWG7fkJNt+/XP3jnfv1oNjUY
X34r//3jy4/bu5ZLNwZKWMFYmABoB6BAuwIFtmbf/wEgZXaT7d8B8KGGp/v29/AXzZbiXnsUarOi
wKDWBn73+vC9pwAMMADQBCR7BCigf+kRo0tBcaxCwIQUTshBEbNNwIJxY8zQhQukHEJAENSQkMcE
EsxQBAIukEAABxRWwiICMVRIwATUjDEiNRNwwMKKEgThI4oxIODiDBLQ6AMBElBjJAkazuCDCzEs
SUAXKFIjgYUwUijIJwWhUAUZa0RggAERmBkBBQjIQEEN1MhAjQEYUIOFDdT04AY1ddrQwyR81nnE
mWjCSQsFcxIagZNntkANBUI4aQUCCLRwxGxYIDAnolbI2UOdkMrZgqY14HmEo3wiKoSiEaxBhhMr
hP+5wRW3iHHArQwwcAA1DTTABK9pNHDAFmfQsAM1ODRgHA4H/AoEENQkoSsDRlCzwwfKGoFrtQ3k
+gE1bNBADTAHAEJNFklQc8YBaVDDwBaIGEvNAekGggOvWVBDwwHfsvFtt9B+cMC0YhhyxQaxVoPC
BgE07HDDJlCTQAGzDUFNCBlQA4EH1KgQAAQaUzNEABoXYHIFDlNsHDUlOFyBxA1TfAHFGQTAsQk0
50BNARlDEELHAVCcQwnUdJAANRcEcAHSR6MMAjUPP4ywrFG7LDLFKlh8wdJG75xxARGHsEEBEJRg
cs0BWAxCAgn8nIDDP3swMTUgBNBB0UfXDTTRXbP/TY0HH7PctMUFVAByDjeTXHfVAUxdDSpcCCD5
5JI/QM0IplADhg7UEEHFC9RYQM0DYFCjgwAWvCDAEKKPLjkXoo8gORGuSy7Cyg+EIUAYt1Nzwwgj
+C4A50N8Hrrrt4tww+VcWE6NCEOgrjrtD1BOOReWFFRMHch07/334HvPgxLhh38CD+Wnrz4yJ0yx
/vjgK3EC+FPMv374sAxSEC9VSOP//wAMoAAHSMACGvCACExgAp3wioIEAwrQiKAEJ0jBClrwghjM
oAY3yEEOQiEUBdkELqZBwhKa8IQoTKEKV8jCFrrwhTC8RE0aoYdo2PCGOMyhDnfIwx768IdADGIQ
Ug2QCIFUAw69MIYjlMHEJjrxiVCMohSnSMUqWvGKUazFEjKhiaUQpBCjsMMyxkjGMprxjGhMoxrX
yMY2uhGNkZiDK7xIkYjY8Y54zKMeCzKRgAAAOw==

------=_NextPart_000_0000_01CBC64C.068E6300
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://midi.mathewvp.com/styles/seqstyle.css

BODY {
	PADDING-BOTTOM: 0px; MARGIN: 0px 0px 20px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; FONT: 76% Verdana,Tahoma,Arial,sans-serif; =
PADDING-TOP: 0px
}
#wrap {
	MARGIN: 0px auto; BACKGROUND: #ffffff; COLOR: #303030
}
#header {
	PADDING-BOTTOM: 0px; MARGIN: 20px 0px 5px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; HEIGHT: 45px; CLEAR: both; PADDING-TOP: 0px
}
#header H1 {
	MARGIN: 20px 0px 0px 10px; WIDTH: 800px; FLOAT: left; COLOR: #000
}
#topnav {
	LINE-HEIGHT: 1.8em; MARGIN-TOP: 0px; PADDING-LEFT: 5px; BACKGROUND: =
url(../img/grey.gif) repeat-x; HEIGHT: 1.8em; COLOR: #000; FONT-SIZE: =
1.2em; BORDER-TOP: #c4c4c4 1px solid
}
#header P {
	TEXT-ALIGN: center; LINE-HEIGHT: 1.2em; MARGIN: 0px 0px 10px; WIDTH: =
500px; FLOAT: right; COLOR: #000; FONT-SIZE: 0.9em
}
#leftwrap {
	MARGIN-TOP: 0px; WIDTH: 160px; FLOAT: right; MARGIN-RIGHT: 10px
}
#leftmenu {
	BORDER-BOTTOM: #c6d4e6 1px solid; BORDER-LEFT: #c6d4e6 1px solid; =
MARGIN-TOP: 20px; WIDTH: 160px; MARGIN-BOTTOM: 10px; FLOAT: right; =
MARGIN-LEFT: 8px; BORDER-RIGHT: #c6d4e6 1px solid
}
#leftmenu UL {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px 0px 20px 10px; =
PADDING-LEFT: 0px; WIDTH: 130px; PADDING-RIGHT: 0px; FONT-SIZE: 1.1em; =
PADDING-TOP: 0px
}
#leftmenu LI {
	MARGIN-BOTTOM: 4px
}
#leftmenu LI A {
	BORDER-LEFT: #cccccc 4px solid; PADDING-BOTTOM: 4px; PADDING-LEFT: =
10px; PADDING-RIGHT: 0px; DISPLAY: block; FONT-FAMILY: =
Verdana,Tahoma,Arial,sans-serif; BACKGROUND: #f4f4f4; HEIGHT: 20px; =
COLOR: #505050; FONT-SIZE: 0.9em; FONT-WEIGHT: bold; TEXT-DECORATION: =
none; PADDING-TOP: 6px
}
#leftmenu LI A:hover {
	BORDER-LEFT: #286ea0 4px solid; BACKGROUND: #eaeaea; COLOR: #286ea0
}
#leftmenu H2 {
	LINE-HEIGHT: 1.8em; BACKGROUND-COLOR: #c6d4e6; MARGIN-TOP: 0px; =
PADDING-LEFT: 15px; HEIGHT: 1.8em; COLOR: #000; FONT-SIZE: 100%
}
.donate {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 15px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
#leftbotmenu {
	BORDER-BOTTOM: #c6d4e6 1px solid; BORDER-LEFT: #c6d4e6 1px solid; =
PADDING-BOTTOM: 10px; MARGIN: 5px 0px 10px; PADDING-LEFT: 10px; WIDTH: =
140px; PADDING-RIGHT: 10px; CLEAR: both; BORDER-TOP: #c6d4e6 1px solid; =
BORDER-RIGHT: #c6d4e6 1px solid; PADDING-TOP: 10px
}
#leftbotmenu UL {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; =
BACKGROUND-COLOR: #eaeaea; LIST-STYLE-TYPE: none; MARGIN: 0px; =
PADDING-LEFT: 0px; BORDER-SPACING: 0px; WIDTH: 100%; PADDING-RIGHT: 0px; =
OVERFLOW: hidden; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
#leftbotmenu UL LI {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; WIDTH: 100%; =
PADDING-RIGHT: 0px; DISPLAY: inline; FLOAT: left; CLEAR: none; =
PADDING-TOP: 0px
}
#leftbotmenu UL LI SPAN {
	PADDING-BOTTOM: 3px; MARGIN: 0px; PADDING-LEFT: 3px; WIDTH: 100%; =
PADDING-RIGHT: 3px; DISPLAY: block; COLOR: #000000; FONT-SIZE: 12px; =
PADDING-TOP: 3px
}
#leftbotmenu UL LI SPAN A {
	COLOR: #303030; FONT-SIZE: 12px
}
.head {
	PADDING-BOTTOM: 0px; BACKGROUND-COLOR: #ffffff; PADDING-LEFT: 10px; =
PADDING-RIGHT: 10px; FONT-FAMILY: tahoma, Verdana; HEIGHT: 13px; COLOR: =
#666666; FONT-SIZE: 10px; TEXT-DECORATION: none; PADDING-TOP: 0px
}
#content {
	MIN-WIDTH: 600px; TEXT-ALIGN: left; PADDING-BOTTOM: 0px; LINE-HEIGHT: =
1.6em; MARGIN: 0px 190px 20px 0px; PADDING-LEFT: 10px; PADDING-RIGHT: =
10px; BORDER-RIGHT: #f0f0f0 1px solid; PADDING-TOP: 0px
}
#content P {
	MARGIN: 0px
}
#content BR {
	MARGIN: 0px
}
#rightwrap {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1.5em; MARGIN: 0px 10px 10px; =
PADDING-LEFT: 0px; WIDTH: 100px; PADDING-RIGHT: 0px; FLOAT: left; =
FONT-SIZE: 0.9em; PADDING-TOP: 0px
}
#rightwrap P {
	MARGIN: 0px 0px 1.5em
}
#content IMG {
	BORDER-BOTTOM: #f0f0f0 4px solid; BORDER-LEFT: #f0f0f0 4px solid; =
PADDING-BOTTOM: 1px; PADDING-LEFT: 1px; PADDING-RIGHT: 1px; DISPLAY: =
inline; BACKGROUND: #cccccc; BORDER-TOP: #f0f0f0 4px solid; =
BORDER-RIGHT: #f0f0f0 4px solid; PADDING-TOP: 1px
}
#footer {
	TEXT-ALIGN: center; PADDING-BOTTOM: 20px; MARGIN: 0px 20px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; COLOR: #808080; CLEAR: both; =
FONT-SIZE: 0.9em; BORDER-TOP: #f0f0f0 4px solid; PADDING-TOP: 10px
}
H3 {
	MARGIN: 0px 0px 10px; FONT-SIZE: 1.3em
}
A {
	COLOR: #286ea0; TEXT-DECORATION: none
}
A:hover {
	COLOR: #286ea0; TEXT-DECORATION: underline
}
A IMG {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
HR {
	COLOR: #c6d4e6
}
#myInput {
	BORDER-BOTTOM: #bbb 1px solid; BORDER-LEFT: #bbb 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: =
"Courier New", Courier, monospace; HEIGHT: 18px; FONT-SIZE: 12px; =
BORDER-TOP: #bbb 1px solid; BORDER-RIGHT: #bbb 1px solid; PADDING-TOP: =
0px
}
#mytxtArea {
	BORDER-BOTTOM: #bbb 1px solid; BORDER-LEFT: #bbb 1px solid; =
PADDING-BOTTOM: 2px; PADDING-LEFT: 2px; PADDING-RIGHT: 2px; FONT-FAMILY: =
"Courier New", Courier, monospace; FONT-SIZE: 12px; BORDER-TOP: #bbb 1px =
solid; BORDER-RIGHT: #bbb 1px solid; PADDING-TOP: 2px
}
#myBtn {
	BORDER-BOTTOM: #bbb 1px solid; BORDER-LEFT: #bbb 1px solid; =
PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-FAMILY: =
Verdana,Tahoma,Arial,sans-serif; BACKGROUND: #c6d4e6; HEIGHT: 18px; =
FONT-SIZE: 12px; BORDER-TOP: #bbb 1px solid; FONT-WEIGHT: bold; =
BORDER-RIGHT: #bbb 1px solid; PADDING-TOP: 0px
}
#form {
	PADDING-BOTTOM: 10px; MARGIN: 0px; PADDING-LEFT: 4px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
.headerText {
	FONT-FAMILY: "Courier New", Courier, monospace; FONT-SIZE: 0.9em; =
FONT-WEIGHT: bold
}
.txt {
	FONT-FAMILY: Trebuchet MS; FONT-SIZE: 0.9em
}

------=_NextPart_000_0000_01CBC64C.068E6300
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://pagead2.googlesyndication.com/pagead/show_ads.js

=0A=
(function(){var g=3Dtrue,h=3Dnull,i=3Dfalse,j=3D(new Date).getTime();var =
k=3Dthis,aa=3Dfunction(a,b,c){a=3Da.split(".");c=3Dc||k;!(a[0]in =
c)&&c.execScript&&c.execScript("var "+a[0]);for(var =
d;a.length&&(d=3Da.shift());)if(!a.length&&b!=3D=3Dundefined)c[d]=3Db;els=
e c=3Dc[d]?c[d]:c[d]=3D{}},ba=3Dfunction(a){return =
a.call.apply(a.bind,arguments)},ca=3Dfunction(a,b){var =
c=3Db||k;if(arguments.length>2){var =
d=3DArray.prototype.slice.call(arguments,2);return function(){var =
f=3DArray.prototype.slice.call(arguments);Array.prototype.unshift.apply(f=
,d);return a.apply(c,f)}}else return function(){return a.apply(c,=0A=
arguments)}},l=3Dfunction(){l=3DFunction.prototype.bind&&Function.prototy=
pe.bind.toString().indexOf("native code")!=3D-1?ba:ca;return =
l.apply(h,arguments)};var n=3Dfunction(a,b){var c=3DparseFloat(a);return =
isNaN(c)||c>1||c<0?b:c},p=3Dfunction(a,b){if(a=3D=3D"true")return =
g;if(a=3D=3D"false")return i;return =
b},da=3D/^([\w-]+\.)*([\w-]{2,})(\:[0-9]+)?$/,fa=3Dfunction(a,b){if(!a)re=
turn b;var c=3Da.match(da);return c?c[0]:b};var ga=3Dfunction(){return =
fa("","pagead2.googlesyndication.com")},ha=3Dfunction(){return =
fa("","pagead2.googlesyndication.com")};var =
ia=3D/&/g,ja=3D/</g,ka=3D/>/g,la=3D/\"/g,t=3D{"\u0000":"\\0","\u0008":"\\=
b","\u000c":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\u000b":"\\x0B",'"':'=
\\"',"\\":"\\\\"},u=3D{"'":"\\'"},v=3Dfunction(a,b){if(a<b)return-1;else =
if(a>b)return 1;return 0};var y,A,B,C,D=3Dfunction(){return =
k.navigator?k.navigator.userAgent:h};C=3DB=3DA=3Dy=3Di;var =
F;if(F=3DD()){var =
ma=3Dk.navigator;y=3DF.indexOf("Opera")=3D=3D0;A=3D!y&&F.indexOf("MSIE")!=
=3D-1;B=3D!y&&F.indexOf("WebKit")!=3D-1;C=3D!y&&!B&&ma.product=3D=3D"Geck=
o"}var G=3DA,na=3DC,oa=3DB,H;=0A=
a:{var I=3D"",J;if(y&&k.opera){var K=3Dk.opera.version;I=3Dtypeof =
K=3D=3D"function"?K():K}else{if(na)J=3D/rv\:([^\);]+)(\)|;)/;else =
if(G)J=3D/MSIE\s+([^\);]+)(\)|;)/;else =
if(oa)J=3D/WebKit\/(\S+)/;if(J){var =
pa=3DJ.exec(D());I=3Dpa?pa[1]:""}}if(G){var =
L,qa=3Dk.document;L=3Dqa?qa.documentMode:undefined;if(L>parseFloat(I)){H=3D=
String(L);break a}}H=3DI}=0A=
var ra=3DH,sa=3D{},M=3Dfunction(a){var b;if(!(b=3Dsa[a])){b=3D0;for(var =
c=3DString(ra).replace(/^[\s\xa0]+|[\s\xa0]+$/g,"").split("."),d=3DString=
(a).replace(/^[\s\xa0]+|[\s\xa0]+$/g,"").split("."),f=3DMath.max(c.length=
,d.length),e=3D0;b=3D=3D0&&e<f;e++){var =
ta=3Dc[e]||"",s=3Dd[e]||"",m=3DRegExp("(\\d*)(\\D*)","g"),z=3DRegExp("(\\=
d*)(\\D*)","g");do{var =
q=3Dm.exec(ta)||["","",""],o=3Dz.exec(s)||["","",""];if(q[0].length=3D=3D=
0&&o[0].length=3D=3D0)break;b=3Dv(q[1].length=3D=3D0?0:parseInt(q[1],10),=
o[1].length=3D=3D0?0:parseInt(o[1],10))||v(q[2].length=3D=3D=0A=
0,o[2].length=3D=3D0)||v(q[2],o[2])}while(b=3D=3D0)}b=3Dsa[a]=3Db>=3D0}re=
turn b};!G||M("9");G&&M("9");var ua=3Ddocument,N=3Dwindow;ha();var =
O=3Dfunction(a){return!!a&&typeof =
a=3D=3D"function"&&!!a.call},va=3Dfunction(a){if(arguments.length<2)retur=
n a.length;for(var =
b=3D1,c=3Darguments.length;b<c;++b)a.push(arguments[b]);return =
a.length};function P(a){return typeof =
encodeURIComponent=3D=3D"function"?encodeURIComponent(a):escape(a)}functi=
on wa(a,b){if(a.attachEvent){a.attachEvent("onload",b);return =
g}if(a.addEventListener){a.addEventListener("load",b,i);return g}return =
i}=0A=
var xa=3Dfunction(a){if(!("google_onload_fired"in =
a)){a.google_onload_fired=3Di;wa(a,function(){a.google_onload_fired=3Dg})=
}};function ya(a,b){if(!(Math.random()<1.0E-4)){var =
c=3DMath.random();if(c<b)return =
a[Math.floor(c/b*a.length)]}return""};var =
za=3Dn("0",0),Aa=3Dn("0",0),Ba=3Dn("0",0),Ca=3Dn("0.02",0);var =
Da=3Dp("false",i),Ea=3Dp("false",i),Fa=3Dp("false",i);aa("google_protectA=
ndRun",function(a,b,c){a=3Dl(b,k,a);b=3Dwindow.onerror;window.onerror=3Da=
;try{c()}catch(d){c=3Dd.toString();var =
f=3D"";if(d.fileName)f=3Dd.fileName;var =
e=3D-1;if(d.lineNumber)e=3Dd.lineNumber;if(!a(c,f,e))throw =
d;}window.onerror=3Db},void 0);=0A=
aa("google_handleError",function(a,b,c,d){if(Math.random()<0.01){a=3D["ht=
tp://",ga(),"/pagead/gen_204","?id=3Djserror","&jscb=3D",Da?1:0,"&jscd=3D=
",Ea?1:0,"&context=3D",P(a),"&msg=3D",P(b),"&file=3D",P(c),"&line=3D",P(d=
.toString()),"&url=3D",P(ua.URL.substring(0,512)),"&ref=3D",P(ua.referrer=
.substring(0,512))];a.push(["&client=3D",P(N.google_ad_client),"&format=3D=
",P(N.google_ad_format),"&slotname=3D",P(N.google_ad_slot),"&output=3D",P=
(N.google_ad_output),"&ad_type=3D",P(N.google_ad_type)].join(""));a=3Da.j=
oin("");N.google_image_requests||=0A=
(N.google_image_requests=3D[]);b=3Dnew =
Image;b.src=3Da;N.google_image_requests.push(b)}return!Fa},void 0);var =
Ha=3Dfunction(a){try{var =
b=3Da.google_test;a.google_test=3D!b;if(a.google_test=3D=3D=3D!b){a.googl=
e_test=3Db;return g}}catch(c){}return =
i},Q=3Dh,Ia=3Dfunction(){if(!Q){for(var =
a=3Dwindow;a!=3Da.parent&&Ha(a.parent);)a=3Da.parent;Q=3Da}return Q};var =
R,S=3Dfunction(a){this.e=3D[];this.b=3Da||window;this.a=3D0;this.c=3Dh},J=
a=3Dfunction(a,b){this.h=3Da;this.n=3Db};S.prototype.g=3Dfunction(a,b){th=
is.e.push(new =
Ja(a,b||this.b));T(this)};S.prototype.i=3Dfunction(a){this.a=3D1;if(a)thi=
s.c=3Dthis.b.setTimeout(l(this.f,this),a)};S.prototype.f=3Dfunction(){if(=
this.a=3D=3D1){if(this.c!=3Dh){this.b.clearTimeout(this.c);this.c=3Dh}thi=
s.a=3D0}T(this)};S.prototype.l=3Dfunction(){return =
g};S.prototype.nq=3DS.prototype.g;S.prototype.al=3DS.prototype.i;S.protot=
ype.rl=3DS.prototype.f;=0A=
S.prototype.sz=3DS.prototype.l;var =
T=3Dfunction(a){a.b.setTimeout(l(a.m,a),0)};S.prototype.m=3Dfunction(){if=
(this.a=3D=3D0&&this.e.length){var =
a=3Dthis.e.shift();this.a=3D2;a.n.setTimeout(l(this.j,this,a),0);T(this)}=
};S.prototype.j=3Dfunction(a){this.a=3D0;a.h()};=0A=
var Ka=3Dfunction(a){try{return a.sz()}catch(b){return =
i}},La=3Dfunction(a){return!!a&&(typeof a=3D=3D"object"||typeof =
a=3D=3D"function")&&Ka(a)&&O(a.nq)&&O(a.al)&&O(a.rl)},Ma=3Dfunction(){if(=
R&&Ka(R))return R;var a=3DIa(),b=3Da.google_jobrunner;if(La(b))return =
R=3Db;return a.google_jobrunner=3DR=3Dnew S(a)};var U,Na;Na=3DU=3Di;var =
V=3DD();if(V)if(V.indexOf("Firefox")!=3D-1)U=3Dg;else =
if(V.indexOf("Camino")=3D=3D-1)if(!(V.indexOf("iPhone")!=3D-1||V.indexOf(=
"iPod")!=3D-1))if(V.indexOf("iPad")=3D=3D-1)if(V.indexOf("Android")=3D=3D=
-1)if(V.indexOf("Chrome")!=3D-1)Na=3Dg;var Oa=3DU,Pa=3DNa;var =
Qa=3Dfunction(a,b,c){var d=3D["<iframe"],f;for(f in =
a)a.hasOwnProperty(f)&&va(d,f+"=3D"+a[f]);d.push('style=3D"left:0;positio=
n:absolute;top:0;"');d.push("></iframe>");b=3D"border:none;height:"+c+"px=
;margin:0;padding:0;position:relative;visibility:visible;width:"+b+"px";r=
eturn['<ins style=3D"display:inline-table;',b,'"><ins =
id=3D"',a.id+"_anchor",'" style=3D"display:block;',b,'">',d.join(" =
"),"</ins></ins>"].join("")};var =
Ra=3Dfunction(){},Ta=3Dfunction(a,b,c){switch(typeof b){case =
"string":Sa(a,b,c);break;case =
"number":c.push(isFinite(b)&&!isNaN(b)?b:"null");break;case =
"boolean":c.push(b);break;case "undefined":c.push("null");break;case =
"object":if(b=3D=3Dh){c.push("null");break}if(b instanceof Array){var =
d=3Db.length;c.push("[");for(var =
f=3D"",e=3D0;e<d;e++){c.push(f);Ta(a,b[e],c);f=3D","}c.push("]");break}c.=
push("{");d=3D"";for(f in b)if(b.hasOwnProperty(f)){e=3Db[f];if(typeof =
e!=3D"function"){c.push(d);Sa(a,f,c);c.push(":");Ta(a,=0A=
e,c);d=3D","}}c.push("}");break;case "function":break;default:throw =
Error("Unknown type: "+typeof =
b);}},Ua=3D{'"':'\\"',"\\":"\\\\","/":"\\/","\u0008":"\\b","\u000c":"\\f"=
,"\n":"\\n","\r":"\\r","\t":"\\t","\u000b":"\\u000b"},Va=3D/\uffff/.test(=
"\uffff")?/[\\\"\x00-\x1f\x7f-\uffff]/g:/[\\\"\x00-\x1f\x7f-\xff]/g,Sa=3D=
function(a,b,c){c.push('"');c.push(b.replace(Va,function(d){if(d in =
Ua)return Ua[d];var =
f=3Dd.charCodeAt(0),e=3D"\\u";if(f<16)e+=3D"000";else =
if(f<256)e+=3D"00";else if(f<4096)e+=3D"0";return =
Ua[d]=3De+f.toString(16)}));=0A=
c.push('"')};var =
W=3D["google_ad_block","google_ad_channel","google_ad_client","google_ad_=
format","google_ad_height","google_ad_host","google_ad_host_channel","goo=
gle_ad_host_tier_id","google_ad_output","google_ad_override","google_ad_r=
egion","google_ad_section","google_ad_slot","google_ad_type","google_ad_w=
idth","google_adtest","google_allow_expandable_ads","google_alternate_ad_=
url","google_alternate_color","google_analytics_domain_name","google_anal=
ytics_uacct","google_bid","google_city","google_color_bg","google_color_b=
order",=0A=
"google_color_line","google_color_link","google_color_text","google_color=
_url","google_container_id","google_contents","google_country","google_cp=
m","google_ctr_threshold","google_cust_age","google_cust_ch","google_cust=
_gender","google_cust_id","google_cust_interests","google_cust_job","goog=
le_cust_l","google_cust_lh","google_cust_u_url","google_disable_video_aut=
oplay","google_ed","google_eids","google_enable_osd","google_encoding","g=
oogle_font_face","google_font_size","google_frame_id","google_gl",=0A=
"google_hints","google_image_size","google_kw","google_kw_type","google_l=
anguage","google_max_num_ads","google_max_radlink_len","google_num_radlin=
ks","google_num_radlinks_per_unit","google_num_slots_to_rotate","google_o=
nly_ads_with_video","google_only_pyv_ads","google_only_userchoice_ads","g=
oogle_override_format","google_page_url","google_referrer_url","google_re=
gion","google_reuse_colors","google_rl_dest_url","google_rl_filtering","g=
oogle_rl_mode","google_rt","google_safe","google_skip","google_tag_info",=0A=
"google_targeting","google_ui_features","google_ui_version","google_video=
_doc_id","google_video_product_type","google_with_pyv_ads"];var =
Wa=3Dfunction(a){this.b=3Da;a.google_iframe_oncopy||(a.google_iframe_onco=
py=3D{handlers:{},log:[],img:Math.random()<0.1?[]:h});this.d=3Da.google_i=
frame_oncopy;a.setTimeout(l(this.k,this),3E4)},Xa;var X=3D"var =
i=3Dthis.id,s=3Dwindow.google_iframe_oncopy,H=3Ds&&s.handlers,h=3DH&&H[i]=
,w=3Dthis.contentWindow,d;try{d=3Dw.document}catch(e){}if(h&&d&&(!d.body|=
|!d.body.firstChild)){if(h.call){i+=3D'.call';setTimeout(h,0)}else =
if(h.match){i+=3D'.nav';w.location.replace(h)}s.log&&s.log.push(i)}";=0A=
if(/[&<>\"]/.test(X)){if(X.indexOf("&")!=3D-1)X=3DX.replace(ia,"&amp;");i=
f(X.indexOf("<")!=3D-1)X=3DX.replace(ja,"&lt;");if(X.indexOf(">")!=3D-1)X=
=3DX.replace(ka,"&gt;");if(X.indexOf('"')!=3D-1)X=3DX.replace(la,"&quot;"=
)}Xa=3DX;Wa.prototype.set=3Dfunction(a,b){this.d.handlers[a]=3Db};=0A=
Wa.prototype.k=3Dfunction(){if(this.d.img){var =
a=3Dthis.d.log,b=3Dthis.b.document;if(a.length){b=3D["http://",ga(),"/pag=
ead/gen_204?id=3Diframecopy&log=3D",P(a.join("-")),"&url=3D",P(b.URL.subs=
tring(0,512)),"&ref=3D",P(b.referrer.substring(0,512))].join("");a.length=
=3D0;a=3Dnew Image;this.d.img.push(a);a.src=3Db}}};var =
Ya=3Dfunction(){var a=3D"script";return["<",a,' =
src=3D"http://',ha(),"/pagead/js/r20101117/r20110120/show_ads_impl.js",'"=
></',a,">"].join("")},Za=3Dfunction(a,b,c,d){return function(){var =
f=3Di;d&&Ma().al(3E4);try{var =
e;try{e=3D!!a.document.getElementById(b).contentWindow.document}catch(ta)=
{e=3Di}if(e){var s=3Da.document.getElementById(b).contentWindow,=0A=
m=3Ds.document;if(!(m.body&&m.body.firstChild)){m.open();s.google_async_i=
frame_close=3Dg;m.write(c)}}else{var =
z=3Da.document.getElementById(b).contentWindow,q;e=3Dc;e=3DString(e);if(e=
.quote)q=3De.quote();else{s=3D['"'];for(m=3D0;m<e.length;m++){var =
o=3De.charAt(m),Ga=3Do.charCodeAt(0),ob=3Ds,pb=3Dm+1,ea;if(!(ea=3Dt[o])){=
var E;if(Ga>31&&Ga<127)E=3Do;else{var r=3Do;if(r in u)E=3Du[r];else if(r =
in t)E=3Du[r]=3Dt[r];else{var =
w=3Dr,x=3Dr.charCodeAt(0);if(x>31&&x<127)w=3Dr;else{if(x<256){w=3D"\\x";i=
f(x<16||x>256)w+=3D"0"}else{w=3D"\\u";if(x<4096)w+=3D=0A=
"0"}w+=3Dx.toString(16).toUpperCase()}E=3Du[r]=3Dw}}ea=3DE}ob[pb]=3Dea}s.=
push('"');q=3Ds.join("")}z.location.replace("javascript:"+q)}f=3Dg}catch(=
xb){z=3DIa().google_jobrunner;La(z)&&z.rl()}f&&(new =
Wa(a)).set(b,Za(a,b,c,i))}},$a=3Dfunction(){return za&&Aa/za||typeof =
window.google_hash_ratio=3D=3D"number"&&window.google_hash_ratio||h},ab=3D=
function(){var =
a=3Dnavigator.userAgent;if(!a.match(/Opera/))if(a.match(/Firefox/))return=
"ff";else if(a.match(/Chrome/))return"ch";else if(a.match(/MSIE =
8/))return"ie8";else if(a.match(/MSIE 7/))return a.match(/Trident/)?=0A=
"iec":"ie7";return"xx"};window.google_loader_used=3Dg;if(!window.google_l=
oader_experiment)if(Ba)window.google_loader_experiment=3Dya(["async","blo=
ck"],Ba)||"none";else{var =
bb=3Dab();window.google_loader_experiment=3Dya(["async_"+bb,"block_"+bb],=
Ca)||"none"}var =
cb;if(cb=3Dwindow.google_enable_async=3D=3D=3Dg||!!window.google_loader_e=
xperiment.match(/async/))cb=3Dwindow.google_enable_async=3D=3D=3Di?i:(G&&=
M(7)||Pa||Oa&&!!window.document.body)&&!window.google_container_id&&(!win=
dow.google_ad_output||window.google_ad_output=3D=3D"html");=0A=
if(cb){var db=3Dwindow;if(db.google_unique_id)++db.google_unique_id;else =
db.google_unique_id=3D1;xa(window);for(var =
Y=3Dwindow,_script$$inline_201=3D"script",eb,Z=3D{allowtransparency:'"tru=
e"',frameborder:'"0"',height:'"'+Y.google_ad_height+'"',hspace:'"0"',marg=
inwidth:'"0"',marginheight:'"0"',onload:'"'+Xa+'"',scrolling:'"no"',vspac=
e:'"0"',width:'"'+Y.google_ad_width+'"'},fb=3DY.document,$=3DZ.id,gb=3D0;=
!$||Y.document.getElementById($);)$=3D"aswift_"+gb++;Z.id=3D$;Z.name=3D$;=
fb.write(Qa(Z,Y.google_ad_width,Y.google_ad_height));=0A=
eb=3D$;for(var hb,ib=3D[],jb=3D0,kb=3DW.length;jb<kb;jb++){var =
lb=3DW[jb];if(Y[lb]!=3Dh){var mb;try{var nb=3D[];Ta(new =
Ra,Y[lb],nb);mb=3Dnb.join("")}catch(qb){}mb&&va(ib,lb,"=3D",mb,";")}}hb=3D=
ib.join("");for(var rb=3D0,sb=3DW.length;rb<sb;rb++)Y[W[rb]]=3Dh;var =
tb=3D(new =
Date).getTime(),ub=3D$a(),vb=3Dwindow.google_loader_experiment,wb=3D["<!d=
octype =
html><html><body><",_script$$inline_201,">",hb,"google_show_ads_impl=3Dtr=
ue;google_unique_id=3D",Y.google_unique_id,';google_async_iframe_id=3D"',=
eb,'";google_start_time=3D',j,";",ub?"google_hash_ratio=3D"+=0A=
ub+";":"",vb?'google_loader_experiment=3D"'+vb+'";':"","google_bpp=3D",tb=
>j?tb-j:1,";</",_script$$inline_201,">",Ya(),"</body></html>"].join(""),y=
b=3DZa(Y,eb,wb,g);Ma().nq(yb,void =
0)}else{window.google_start_time=3Dj;window.google_hash_ratio=3D$a();docu=
ment.write(Ya())};})();=0A=

------=_NextPart_000_0000_01CBC64C.068E6300
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://www.google-analytics.com/urchin.js

//-- Google Analytics Urchin Module=0A=
//-- Copyright 2007 Google, All Rights Reserved.=0A=
=0A=
//-- Urchin On Demand Settings ONLY=0A=
var _uacct=3D"";			// set up the Urchin Account=0A=
var _userv=3D1;			// service mode (0=3Dlocal,1=3Dremote,2=3Dboth)=0A=
=0A=
//-- UTM User Settings=0A=
var _ufsc=3D1;			// set client info flag (1=3Don|0=3Doff)=0A=
var _udn=3D"auto";		// (auto|none|domain) set the domain name for cookies=0A=
var _uhash=3D"on";		// (on|off) unique domain hash for cookies=0A=
var _utimeout=3D"1800";   	// set the inactive session timeout in seconds=0A=
var _ugifpath=3D"/__utm.gif";	// set the web path to the __utm.gif file=0A=
var _utsp=3D"|";			// transaction field separator=0A=
var _uflash=3D1;			// set flash version detect option (1=3Don|0=3Doff)=0A=
var _utitle=3D1;			// set the document title detect option =
(1=3Don|0=3Doff)=0A=
var _ulink=3D0;			// enable linker functionality (1=3Don|0=3Doff)=0A=
var _uanchor=3D0;			// enable use of anchors for campaign =
(1=3Don|0=3Doff)=0A=
var _utcp=3D"/";			// the cookie path for tracking=0A=
var _usample=3D100;		// The sampling % of visitors to track (1-100).=0A=
=0A=
//-- UTM Campaign Tracking Settings=0A=
var _uctm=3D1;			// set campaign tracking module (1=3Don|0=3Doff)=0A=
var _ucto=3D"15768000";		// set timeout in seconds (6 month default)=0A=
var _uccn=3D"utm_campaign";	// name=0A=
var _ucmd=3D"utm_medium";		// medium (cpc|cpm|link|email|organic)=0A=
var _ucsr=3D"utm_source";		// source=0A=
var _uctr=3D"utm_term";		// term/keyword=0A=
var _ucct=3D"utm_content";	// content=0A=
var _ucid=3D"utm_id";		// id number=0A=
var _ucno=3D"utm_nooverride";	// don't override=0A=
=0A=
//-- Auto/Organic Sources and Keywords=0A=
var _uOsr=3Dnew Array();=0A=
var _uOkw=3Dnew Array();=0A=
_uOsr[0]=3D"google";	_uOkw[0]=3D"q";=0A=
_uOsr[1]=3D"yahoo";	_uOkw[1]=3D"p";=0A=
_uOsr[2]=3D"msn";		_uOkw[2]=3D"q";=0A=
_uOsr[3]=3D"aol";		_uOkw[3]=3D"query";=0A=
_uOsr[4]=3D"aol";		_uOkw[4]=3D"encquery";=0A=
_uOsr[5]=3D"lycos";	_uOkw[5]=3D"query";=0A=
_uOsr[6]=3D"ask";		_uOkw[6]=3D"q";=0A=
_uOsr[7]=3D"altavista";	_uOkw[7]=3D"q";=0A=
_uOsr[8]=3D"netscape";	_uOkw[8]=3D"query";=0A=
_uOsr[9]=3D"cnn";	_uOkw[9]=3D"query";=0A=
_uOsr[10]=3D"looksmart";	_uOkw[10]=3D"qt";=0A=
_uOsr[11]=3D"about";	_uOkw[11]=3D"terms";=0A=
_uOsr[12]=3D"mamma";	_uOkw[12]=3D"query";=0A=
_uOsr[13]=3D"alltheweb";	_uOkw[13]=3D"q";=0A=
_uOsr[14]=3D"gigablast";	_uOkw[14]=3D"q";=0A=
_uOsr[15]=3D"voila";	_uOkw[15]=3D"rdata";=0A=
_uOsr[16]=3D"virgilio";	_uOkw[16]=3D"qs";=0A=
_uOsr[17]=3D"live";	_uOkw[17]=3D"q";=0A=
_uOsr[18]=3D"baidu";	_uOkw[18]=3D"wd";=0A=
_uOsr[19]=3D"alice";	_uOkw[19]=3D"qs";=0A=
_uOsr[20]=3D"yandex";	_uOkw[20]=3D"text";=0A=
_uOsr[21]=3D"najdi";	_uOkw[21]=3D"q";=0A=
_uOsr[22]=3D"aol";	_uOkw[22]=3D"q";=0A=
_uOsr[23]=3D"club-internet"; _uOkw[23]=3D"query";=0A=
_uOsr[24]=3D"mama";	_uOkw[24]=3D"query";=0A=
_uOsr[25]=3D"seznam";	_uOkw[25]=3D"q";=0A=
_uOsr[26]=3D"search";	_uOkw[26]=3D"q";=0A=
_uOsr[27]=3D"wp";	_uOkw[27]=3D"szukaj";=0A=
_uOsr[28]=3D"onet";	_uOkw[28]=3D"qt";=0A=
_uOsr[29]=3D"netsprint";	_uOkw[29]=3D"q";=0A=
_uOsr[30]=3D"google.interia";	_uOkw[30]=3D"q";=0A=
_uOsr[31]=3D"szukacz";	_uOkw[31]=3D"q";=0A=
_uOsr[32]=3D"yam";	_uOkw[32]=3D"k";=0A=
_uOsr[33]=3D"pchome";	_uOkw[33]=3D"q";=0A=
_uOsr[34]=3D"kvasir";	_uOkw[34]=3D"searchExpr";=0A=
_uOsr[35]=3D"sesam";	_uOkw[35]=3D"q";=0A=
_uOsr[36]=3D"ozu"; _uOkw[36]=3D"q";=0A=
_uOsr[37]=3D"terra"; _uOkw[37]=3D"query";=0A=
_uOsr[38]=3D"nostrum"; _uOkw[38]=3D"query";=0A=
_uOsr[39]=3D"mynet"; _uOkw[39]=3D"q";=0A=
_uOsr[40]=3D"ekolay"; _uOkw[40]=3D"q";=0A=
_uOsr[41]=3D"search.ilse"; _uOkw[41]=3D"search_for";=0A=
_uOsr[42]=3D"bing"; _uOkw[42]=3D"q";=0A=
=0A=
//-- Auto/Organic Keywords to Ignore=0A=
var _uOno=3Dnew Array();=0A=
//_uOno[0]=3D"urchin";=0A=
//_uOno[1]=3D"urchin.com";=0A=
//_uOno[2]=3D"www.urchin.com";=0A=
=0A=
//-- Referral domains to Ignore=0A=
var _uRno=3Dnew Array();=0A=
//_uRno[0]=3D".urchin.com";=0A=
=0A=
//-- **** Don't modify below this point ***=0A=
var =
_uff,_udh,_udt,_ubl=3D0,_udo=3D"",_uu,_ufns=3D0,_uns=3D0,_ur=3D"-",_ufno=3D=
0,_ust=3D0,_ubd=3Ddocument,_udl=3D_ubd.location,_udlh=3D"",_uwv=3D"1.3";=0A=
var _ugifpath2=3D"http://www.google-analytics.com/__utm.gif";=0A=
if (_udl.hash) _udlh=3D_udl.href.substring(_udl.href.indexOf('#'));=0A=
if (_udl.protocol=3D=3D"https:") =
_ugifpath2=3D"https://ssl.google-analytics.com/__utm.gif";=0A=
if (!_utcp || _utcp=3D=3D"") _utcp=3D"/";=0A=
function urchinTracker(page) {=0A=
 if (_udl.protocol=3D=3D"file:") return;=0A=
 if (_uff && (!page || page=3D=3D"")) return;=0A=
 var a,b,c,xx,v,z,k,x=3D"",s=3D"",f=3D0,nv=3D0;=0A=
 var nx=3D" expires=3D"+_uNx()+";";=0A=
 var dc=3D_ubd.cookie;=0A=
 _udh=3D_uDomain();=0A=
 if (!_uVG()) return;=0A=
 _uu=3DMath.round(Math.random()*2147483647);=0A=
 _udt=3Dnew Date();=0A=
 _ust=3DMath.round(_udt.getTime()/1000);=0A=
 a=3Ddc.indexOf("__utma=3D"+_udh+".");=0A=
 b=3Ddc.indexOf("__utmb=3D"+_udh);=0A=
 c=3Ddc.indexOf("__utmc=3D"+_udh);=0A=
 if (_udn && _udn!=3D"") { _udo=3D" domain=3D"+_udn+";"; }=0A=
 if (_utimeout && _utimeout!=3D"") {=0A=
  x=3Dnew Date(_udt.getTime()+(_utimeout*1000));=0A=
  x=3D" expires=3D"+x.toGMTString()+";";=0A=
 }=0A=
 if (_ulink) {=0A=
  if (_uanchor && _udlh && _udlh!=3D"") s=3D_udlh+"&";=0A=
  s+=3D_udl.search;=0A=
  if(s && s!=3D"" && s.indexOf("__utma=3D")>=3D0) {=0A=
   if (!(_uIN(a=3D_uGC(s,"__utma=3D","&")))) a=3D"-";=0A=
   if (!(_uIN(b=3D_uGC(s,"__utmb=3D","&")))) b=3D"-";=0A=
   if (!(_uIN(c=3D_uGC(s,"__utmc=3D","&")))) c=3D"-";=0A=
   v=3D_uGC(s,"__utmv=3D","&");=0A=
   z=3D_uGC(s,"__utmz=3D","&");=0A=
   k=3D_uGC(s,"__utmk=3D","&");=0A=
   xx=3D_uGC(s,"__utmx=3D","&");=0A=
   if ((k*1) !=3D ((_uHash(a+b+c+xx+z+v)*1)+(_udh*1))) =
{_ubl=3D1;a=3D"-";b=3D"-";c=3D"-";xx=3D"-";z=3D"-";v=3D"-";}=0A=
   if (a!=3D"-" && b!=3D"-" && c!=3D"-") f=3D1;=0A=
   else if(a!=3D"-") f=3D2;=0A=
  }=0A=
 }=0A=
 if(f=3D=3D1) {=0A=
  _ubd.cookie=3D"__utma=3D"+a+"; path=3D"+_utcp+";"+nx+_udo;=0A=
  _ubd.cookie=3D"__utmb=3D"+b+"; path=3D"+_utcp+";"+x+_udo;=0A=
  _ubd.cookie=3D"__utmc=3D"+c+"; path=3D"+_utcp+";"+_udo;=0A=
 } else if (f=3D=3D2) {=0A=
  a=3D_uFixA(s,"&",_ust);=0A=
  _ubd.cookie=3D"__utma=3D"+a+"; path=3D"+_utcp+";"+nx+_udo;=0A=
  _ubd.cookie=3D"__utmb=3D"+_udh+"; path=3D"+_utcp+";"+x+_udo;=0A=
  _ubd.cookie=3D"__utmc=3D"+_udh+"; path=3D"+_utcp+";"+_udo;=0A=
  _ufns=3D1;=0A=
 } else if (a>=3D0 && b>=3D0 && c>=3D0) {=0A=
   b =3D _uGC(dc,"__utmb=3D"+_udh,";");=0A=
   b =3D ("-" =3D=3D b) ? _udh : b;  =0A=
  _ubd.cookie=3D"__utmb=3D"+b+"; path=3D"+_utcp+";"+x+_udo;=0A=
 } else {=0A=
  if (a>=3D0) a=3D_uFixA(_ubd.cookie,";",_ust);=0A=
  else {=0A=
   a=3D_udh+"."+_uu+"."+_ust+"."+_ust+"."+_ust+".1";=0A=
   nv=3D1;=0A=
  }=0A=
  _ubd.cookie=3D"__utma=3D"+a+"; path=3D"+_utcp+";"+nx+_udo;=0A=
  _ubd.cookie=3D"__utmb=3D"+_udh+"; path=3D"+_utcp+";"+x+_udo;=0A=
  _ubd.cookie=3D"__utmc=3D"+_udh+"; path=3D"+_utcp+";"+_udo;=0A=
  _ufns=3D1;=0A=
 }=0A=
 if (_ulink && xx && xx!=3D"" && xx!=3D"-") {=0A=
   xx=3D_uUES(xx);=0A=
   if (xx.indexOf(";")=3D=3D-1) _ubd.cookie=3D"__utmx=3D"+xx+"; =
path=3D"+_utcp+";"+nx+_udo;=0A=
 }=0A=
 if (_ulink && v && v!=3D"" && v!=3D"-") {=0A=
  v=3D_uUES(v);=0A=
  if (v.indexOf(";")=3D=3D-1) _ubd.cookie=3D"__utmv=3D"+v+"; =
path=3D"+_utcp+";"+nx+_udo;=0A=
 }=0A=
 var wc=3Dwindow;=0A=
 var c=3D_ubd.cookie;=0A=
 if(wc && wc.gaGlobal && wc.gaGlobal.dh=3D=3D_udh){=0A=
  var g=3Dwc.gaGlobal;=0A=
  var ua=3Dc.split("__utma=3D"+_udh+".")[1].split(";")[0].split(".");=0A=
  if(g.sid)ua[3]=3Dg.sid;=0A=
  if(nv>0){=0A=
   ua[2]=3Dua[3];=0A=
   if(g.vid){=0A=
    var v=3Dg.vid.split(".");=0A=
    ua[0]=3Dv[0];=0A=
    ua[1]=3Dv[1];=0A=
   }=0A=
  }=0A=
  _ubd.cookie=3D"__utma=3D"+_udh+"."+ua.join(".")+"; =
path=3D"+_utcp+";"+nx+_udo;=0A=
 }=0A=
 _uInfo(page);=0A=
 _ufns=3D0;=0A=
 _ufno=3D0;=0A=
 if (!page || page=3D=3D"") _uff=3D1;=0A=
}=0A=
function _uGH() {=0A=
 var hid;=0A=
 var wc=3Dwindow;=0A=
 if (wc && wc.gaGlobal && wc.gaGlobal.hid) {=0A=
  hid=3Dwc.gaGlobal.hid;=0A=
 } else {=0A=
  hid=3DMath.round(Math.random()*0x7fffffff);=0A=
  if (!wc.gaGlobal) wc.gaGlobal=3D{};=0A=
  wc.gaGlobal.hid=3Dhid;=0A=
 }=0A=
 return hid;=0A=
}=0A=
function _uInfo(page) {=0A=
 var p,s=3D"",dm=3D"",pg=3D_udl.pathname+_udl.search;=0A=
 if (page && page!=3D"") pg=3D_uES(page,1);=0A=
 _ur=3D_ubd.referrer;=0A=
 if (!_ur || _ur=3D=3D"") { _ur=3D"-"; }=0A=
 else {=0A=
  dm=3D_ubd.domain;=0A=
  if(_utcp && _utcp!=3D"/") dm+=3D_utcp;=0A=
  p=3D_ur.indexOf(dm);=0A=
  if ((p>=3D0) && (p<=3D8)) { _ur=3D"0"; }=0A=
  if (_ur.indexOf("[")=3D=3D0 && =
_ur.lastIndexOf("]")=3D=3D(_ur.length-1)) { _ur=3D"-"; }=0A=
 }=0A=
 s+=3D"&utmn=3D"+_uu;=0A=
 if (_ufsc) s+=3D_uBInfo();=0A=
 if (_uctm) s+=3D_uCInfo();=0A=
 if (_utitle && _ubd.title && _ubd.title!=3D"") =
s+=3D"&utmdt=3D"+_uES(_ubd.title);=0A=
 if (_udl.hostname && _udl.hostname!=3D"") =
s+=3D"&utmhn=3D"+_uES(_udl.hostname);=0A=
 if (_usample && _usample !=3D 100) s+=3D"&utmsp=3D"+_uES(_usample);=0A=
 s+=3D"&utmhid=3D"+_uGH();=0A=
 s+=3D"&utmr=3D"+_ur;=0A=
 s+=3D"&utmp=3D"+pg;=0A=
 if ((_userv=3D=3D0 || _userv=3D=3D2) && _uSP()) {=0A=
  var i=3Dnew Image(1,1);=0A=
  i.src=3D_ugifpath+"?"+"utmwv=3D"+_uwv+s;=0A=
  i.onload=3Dfunction() { _uVoid(); }=0A=
 }=0A=
 if ((_userv=3D=3D1 || _userv=3D=3D2) && _uSP()) {=0A=
  var i2=3Dnew Image(1,1);=0A=
  =
i2.src=3D_ugifpath2+"?"+"utmwv=3D"+_uwv+s+"&utmac=3D"+_uacct+"&utmcc=3D"+=
_uGCS();=0A=
  i2.onload=3Dfunction() { _uVoid(); }=0A=
 }=0A=
 return;=0A=
}=0A=
function _uVoid() { return; }=0A=
function _uCInfo() {=0A=
 if (!_ucto || _ucto=3D=3D"") { _ucto=3D"15768000"; }=0A=
 if (!_uVG()) return;=0A=
 var =
c=3D"",t=3D"-",t2=3D"-",t3=3D"-",o=3D0,cs=3D0,cn=3D0,i=3D0,z=3D"-",s=3D""=
;=0A=
 if (_uanchor && _udlh && _udlh!=3D"") s=3D_udlh+"&";=0A=
 s+=3D_udl.search;=0A=
 var x=3Dnew Date(_udt.getTime()+(_ucto*1000));=0A=
 var dc=3D_ubd.cookie;=0A=
 x=3D" expires=3D"+x.toGMTString()+";";=0A=
 if (_ulink && !_ubl) {=0A=
  z=3D_uUES(_uGC(s,"__utmz=3D","&"));=0A=
  if (z!=3D"-" && z.indexOf(";")=3D=3D-1) { =
_ubd.cookie=3D"__utmz=3D"+z+"; path=3D"+_utcp+";"+x+_udo; return ""; }=0A=
 }=0A=
 z=3Ddc.indexOf("__utmz=3D"+_udh+".");=0A=
 if (z>-1) { z=3D_uGC(dc,"__utmz=3D"+_udh+".",";"); }=0A=
 else { z=3D"-"; }=0A=
 t=3D_uGC(s,_ucid+"=3D","&");=0A=
 t2=3D_uGC(s,_ucsr+"=3D","&");=0A=
 t3=3D_uGC(s,"gclid=3D","&");=0A=
 if ((t!=3D"-" && t!=3D"") || (t2!=3D"-" && t2!=3D"") || (t3!=3D"-" && =
t3!=3D"")) {=0A=
  if (t!=3D"-" && t!=3D"") c+=3D"utmcid=3D"+_uEC(t);=0A=
  if (t2!=3D"-" && t2!=3D"") { if (c !=3D "") c+=3D"|"; =
c+=3D"utmcsr=3D"+_uEC(t2); }=0A=
  if (t3!=3D"-" && t3!=3D"") { if (c !=3D "") c+=3D"|"; =
c+=3D"utmgclid=3D"+_uEC(t3); }=0A=
  t=3D_uGC(s,_uccn+"=3D","&");=0A=
  if (t!=3D"-" && t!=3D"") c+=3D"|utmccn=3D"+_uEC(t);=0A=
  else c+=3D"|utmccn=3D(not+set)";=0A=
  t=3D_uGC(s,_ucmd+"=3D","&");=0A=
  if (t!=3D"-" && t!=3D"") c+=3D"|utmcmd=3D"+_uEC(t);=0A=
  else  c+=3D"|utmcmd=3D(not+set)";=0A=
  t=3D_uGC(s,_uctr+"=3D","&");=0A=
  if (t!=3D"-" && t!=3D"") c+=3D"|utmctr=3D"+_uEC(t);=0A=
  else { t=3D_uOrg(1); if (t!=3D"-" && t!=3D"") =
c+=3D"|utmctr=3D"+_uEC(t); }=0A=
  t=3D_uGC(s,_ucct+"=3D","&");=0A=
  if (t!=3D"-" && t!=3D"") c+=3D"|utmcct=3D"+_uEC(t);=0A=
  t=3D_uGC(s,_ucno+"=3D","&");=0A=
  if (t=3D=3D"1") o=3D1;=0A=
  if (z!=3D"-" && o=3D=3D1) return "";=0A=
 }=0A=
 if (c=3D=3D"-" || c=3D=3D"") { c=3D_uOrg(); if (z!=3D"-" && =
_ufno=3D=3D1)  return ""; }=0A=
 if (c=3D=3D"-" || c=3D=3D"") { if (_ufns=3D=3D1)  c=3D_uRef(); if =
(z!=3D"-" && _ufno=3D=3D1)  return ""; }=0A=
 if (c=3D=3D"-" || c=3D=3D"") {=0A=
  if (z=3D=3D"-" && _ufns=3D=3D1) { =
c=3D"utmccn=3D(direct)|utmcsr=3D(direct)|utmcmd=3D(none)"; }=0A=
  if (c=3D=3D"-" || c=3D=3D"") return "";=0A=
 }=0A=
 if (z!=3D"-") {=0A=
  i=3Dz.indexOf(".");=0A=
  if (i>-1) i=3Dz.indexOf(".",i+1);=0A=
  if (i>-1) i=3Dz.indexOf(".",i+1);=0A=
  if (i>-1) i=3Dz.indexOf(".",i+1);=0A=
  t=3Dz.substring(i+1,z.length);=0A=
  if (t.toLowerCase()=3D=3Dc.toLowerCase()) cs=3D1;=0A=
  t=3Dz.substring(0,i);=0A=
  if ((i=3Dt.lastIndexOf(".")) > -1) {=0A=
   t=3Dt.substring(i+1,t.length);=0A=
   cn=3D(t*1);=0A=
  }=0A=
 }=0A=
 if (cs=3D=3D0 || _ufns=3D=3D1) {=0A=
  t=3D_uGC(dc,"__utma=3D"+_udh+".",";");=0A=
  if ((i=3Dt.lastIndexOf(".")) > 9) {=0A=
   _uns=3Dt.substring(i+1,t.length);=0A=
   _uns=3D(_uns*1);=0A=
  }=0A=
  cn++;=0A=
  if (_uns=3D=3D0) _uns=3D1;=0A=
  _ubd.cookie=3D"__utmz=3D"+_udh+"."+_ust+"."+_uns+"."+cn+"."+c+"; =
path=3D"+_utcp+"; "+x+_udo;=0A=
 }=0A=
 if (cs=3D=3D0 || _ufns=3D=3D1) return "&utmcn=3D1";=0A=
 else return "&utmcr=3D1";=0A=
}=0A=
function _uRef() {=0A=
 if (_ur=3D=3D"0" || _ur=3D=3D"" || _ur=3D=3D"-") return "";=0A=
 var i=3D0,h,k,n;=0A=
 if ((i=3D_ur.indexOf("://"))<0 || _uGCse()) return "";=0A=
 h=3D_ur.substring(i+3,_ur.length);=0A=
 if (h.indexOf("/") > -1) {=0A=
  k=3Dh.substring(h.indexOf("/"),h.length);=0A=
  if (k.indexOf("?") > -1) k=3Dk.substring(0,k.indexOf("?"));=0A=
  h=3Dh.substring(0,h.indexOf("/"));=0A=
 }=0A=
 h=3Dh.toLowerCase();=0A=
 n=3Dh;=0A=
 if ((i=3Dn.indexOf(":")) > -1) n=3Dn.substring(0,i);=0A=
 for (var ii=3D0;ii<_uRno.length;ii++) {=0A=
  if ((i=3Dn.indexOf(_uRno[ii].toLowerCase())) > -1 && =
n.length=3D=3D(i+_uRno[ii].length)) { _ufno=3D1; break; }=0A=
 }=0A=
 if (h.indexOf("www.")=3D=3D0) h=3Dh.substring(4,h.length);=0A=
 return =
"utmccn=3D(referral)|utmcsr=3D"+_uEC(h)+"|"+"utmcct=3D"+_uEC(k)+"|utmcmd=3D=
referral";=0A=
}=0A=
function _uOrg(t) {=0A=
 if (_ur=3D=3D"0" || _ur=3D=3D"" || _ur=3D=3D"-") return "";=0A=
 var i=3D0,h,k;=0A=
 if ((i=3D_ur.indexOf("://"))<0 || _uGCse()) return "";=0A=
 h=3D_ur.substring(i+3,_ur.length);=0A=
 if (h.indexOf("/") > -1) {=0A=
  h=3Dh.substring(0,h.indexOf("/"));=0A=
 }=0A=
 for (var ii=3D0;ii<_uOsr.length;ii++) {=0A=
  if (h.toLowerCase().indexOf(_uOsr[ii].toLowerCase()) > -1) {=0A=
   if ((i=3D_ur.indexOf("?"+_uOkw[ii]+"=3D")) > -1 || =
(i=3D_ur.indexOf("&"+_uOkw[ii]+"=3D")) > -1) {=0A=
    k=3D_ur.substring(i+_uOkw[ii].length+2,_ur.length);=0A=
    if ((i=3Dk.indexOf("&")) > -1) k=3Dk.substring(0,i);=0A=
    for (var yy=3D0;yy<_uOno.length;yy++) {=0A=
     if (_uOno[yy].toLowerCase()=3D=3Dk.toLowerCase()) { _ufno=3D1; =
break; }=0A=
    }=0A=
    if (t) return _uEC(k);=0A=
    else return =
"utmccn=3D(organic)|utmcsr=3D"+_uEC(_uOsr[ii])+"|"+"utmctr=3D"+_uEC(k)+"|=
utmcmd=3Dorganic";=0A=
   }=0A=
  }=0A=
 }=0A=
 return "";=0A=
}=0A=
function _uGCse() {=0A=
 var h,p;=0A=
 h=3Dp=3D_ur.split("://")[1];=0A=
 if(h.indexOf("/")>-1) {=0A=
  h=3Dh.split("/")[0];=0A=
  p=3Dp.substring(p.indexOf("/")+1,p.length);=0A=
 }=0A=
 if(p.indexOf("?")>-1) {=0A=
  p=3Dp.split("?")[0];=0A=
 }=0A=
 if(h.toLowerCase().indexOf("google")>-1) {=0A=
  if(_ur.indexOf("?q=3D")>-1 || _ur.indexOf("&q=3D")>-1) {=0A=
   if (p.toLowerCase().indexOf("cse")>-1) {=0A=
    return true;=0A=
   }=0A=
  }=0A=
 }=0A=
}=0A=
function _uBInfo() {=0A=
 var sr=3D"-",sc=3D"-",ul=3D"-",fl=3D"-",cs=3D"-",je=3D1;=0A=
 var n=3Dnavigator;=0A=
 if (self.screen) {=0A=
  sr=3Dscreen.width+"x"+screen.height;=0A=
  sc=3Dscreen.colorDepth+"-bit";=0A=
 } else if (self.java) {=0A=
  var j=3Djava.awt.Toolkit.getDefaultToolkit();=0A=
  var s=3Dj.getScreenSize();=0A=
  sr=3Ds.width+"x"+s.height;=0A=
 }=0A=
 if (n.language) { ul=3Dn.language.toLowerCase(); }=0A=
 else if (n.browserLanguage) { ul=3Dn.browserLanguage.toLowerCase(); }=0A=
 je=3Dn.javaEnabled()?1:0;=0A=
 if (_uflash) fl=3D_uFlash();=0A=
 if (_ubd.characterSet) cs=3D_uES(_ubd.characterSet);=0A=
 else if (_ubd.charset) cs=3D_uES(_ubd.charset);=0A=
 return =
"&utmcs=3D"+cs+"&utmsr=3D"+sr+"&utmsc=3D"+sc+"&utmul=3D"+ul+"&utmje=3D"+j=
e+"&utmfl=3D"+fl;=0A=
}=0A=
function __utmSetTrans() {=0A=
 var e;=0A=
 if (_ubd.getElementById) e=3D_ubd.getElementById("utmtrans");=0A=
 else if (_ubd.utmform && _ubd.utmform.utmtrans) =
e=3D_ubd.utmform.utmtrans;=0A=
 if (!e) return;=0A=
 var l=3De.value.split("UTM:");=0A=
 var i,i2,c;=0A=
 if (_userv=3D=3D0 || _userv=3D=3D2) i=3Dnew Array();=0A=
 if (_userv=3D=3D1 || _userv=3D=3D2) { i2=3Dnew Array(); c=3D_uGCS(); }=0A=
=0A=
 for (var ii=3D0;ii<l.length;ii++) {=0A=
  l[ii]=3D_uTrim(l[ii]);=0A=
  if (l[ii].charAt(0)!=3D'T' && l[ii].charAt(0)!=3D'I') continue;=0A=
  var r=3DMath.round(Math.random()*2147483647);=0A=
  if (!_utsp || _utsp=3D=3D"") _utsp=3D"|";=0A=
  var f=3Dl[ii].split(_utsp),s=3D"";=0A=
  if (f[0].charAt(0)=3D=3D'T') {=0A=
   s=3D"&utmt=3Dtran"+"&utmn=3D"+r;=0A=
   f[1]=3D_uTrim(f[1]); if(f[1]&&f[1]!=3D"") =
s+=3D"&utmtid=3D"+_uES(f[1]);=0A=
   f[2]=3D_uTrim(f[2]); if(f[2]&&f[2]!=3D"") =
s+=3D"&utmtst=3D"+_uES(f[2]);=0A=
   f[3]=3D_uTrim(f[3]); if(f[3]&&f[3]!=3D"") =
s+=3D"&utmtto=3D"+_uES(f[3]);=0A=
   f[4]=3D_uTrim(f[4]); if(f[4]&&f[4]!=3D"") =
s+=3D"&utmttx=3D"+_uES(f[4]);=0A=
   f[5]=3D_uTrim(f[5]); if(f[5]&&f[5]!=3D"") =
s+=3D"&utmtsp=3D"+_uES(f[5]);=0A=
   f[6]=3D_uTrim(f[6]); if(f[6]&&f[6]!=3D"") =
s+=3D"&utmtci=3D"+_uES(f[6]);=0A=
   f[7]=3D_uTrim(f[7]); if(f[7]&&f[7]!=3D"") =
s+=3D"&utmtrg=3D"+_uES(f[7]);=0A=
   f[8]=3D_uTrim(f[8]); if(f[8]&&f[8]!=3D"") =
s+=3D"&utmtco=3D"+_uES(f[8]);=0A=
  } else {=0A=
   s=3D"&utmt=3Ditem"+"&utmn=3D"+r;=0A=
   f[1]=3D_uTrim(f[1]); if(f[1]&&f[1]!=3D"") =
s+=3D"&utmtid=3D"+_uES(f[1]);=0A=
   f[2]=3D_uTrim(f[2]); if(f[2]&&f[2]!=3D"") =
s+=3D"&utmipc=3D"+_uES(f[2]);=0A=
   f[3]=3D_uTrim(f[3]); if(f[3]&&f[3]!=3D"") =
s+=3D"&utmipn=3D"+_uES(f[3]);=0A=
   f[4]=3D_uTrim(f[4]); if(f[4]&&f[4]!=3D"") =
s+=3D"&utmiva=3D"+_uES(f[4]);=0A=
   f[5]=3D_uTrim(f[5]); if(f[5]&&f[5]!=3D"") =
s+=3D"&utmipr=3D"+_uES(f[5]);=0A=
   f[6]=3D_uTrim(f[6]); if(f[6]&&f[6]!=3D"") =
s+=3D"&utmiqt=3D"+_uES(f[6]);=0A=
  }=0A=
  if (_udl.hostname && _udl.hostname!=3D"") =
s+=3D"&utmhn=3D"+_uES(_udl.hostname);=0A=
  if (_usample && _usample !=3D 100) s+=3D"&utmsp=3D"+_uES(_usample);=0A=
=0A=
  if ((_userv=3D=3D0 || _userv=3D=3D2) && _uSP()) {=0A=
   i[ii]=3Dnew Image(1,1);=0A=
   i[ii].src=3D_ugifpath+"?"+"utmwv=3D"+_uwv+s;=0A=
   i[ii].onload=3Dfunction() { _uVoid(); }=0A=
  }=0A=
  if ((_userv=3D=3D1 || _userv=3D=3D2) && _uSP()) {=0A=
   i2[ii]=3Dnew Image(1,1);=0A=
   =
i2[ii].src=3D_ugifpath2+"?"+"utmwv=3D"+_uwv+s+"&utmac=3D"+_uacct+"&utmcc=3D=
"+c;=0A=
   i2[ii].onload=3Dfunction() { _uVoid(); }=0A=
  }=0A=
 }=0A=
 return;=0A=
}=0A=
function _uFlash() {=0A=
 var f=3D"-",n=3Dnavigator;=0A=
 if (n.plugins && n.plugins.length) {=0A=
  for (var ii=3D0;ii<n.plugins.length;ii++) {=0A=
   if (n.plugins[ii].name.indexOf('Shockwave Flash')!=3D-1) {=0A=
    f=3Dn.plugins[ii].description.split('Shockwave Flash ')[1];=0A=
    break;=0A=
   }=0A=
  }=0A=
 } else {=0A=
  var fl;=0A=
  try {=0A=
   fl =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash.7");=0A=
   f =3D fl.GetVariable("$version");=0A=
  } catch(e) {}=0A=
  if (f =3D=3D "-") {=0A=
   try {=0A=
    fl =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash.6");=0A=
    f =3D "WIN 6,0,21,0";=0A=
    fl.AllowScriptAccess =3D "always";=0A=
    f =3D fl.GetVariable("$version");=0A=
   } catch(e) {}=0A=
  }=0A=
  if (f =3D=3D "-") {=0A=
   try {=0A=
    fl =3D new ActiveXObject("ShockwaveFlash.ShockwaveFlash");=0A=
    f =3D fl.GetVariable("$version");=0A=
   } catch(e) {}=0A=
  }=0A=
  if (f !=3D "-") {=0A=
   f =3D f.split(" ")[1].split(",");=0A=
   f =3D f[0] + "." + f[1] + " r" + f[2];=0A=
  }=0A=
 }=0A=
 return f;=0A=
}=0A=
function __utmLinkerUrl(l,h) {=0A=
 var p,k,a=3D"-",b=3D"-",c=3D"-",x=3D"-",z=3D"-",v=3D"-";=0A=
 var dc=3D_ubd.cookie;=0A=
 var iq =3D l.indexOf("?");=0A=
 var ih =3D l.indexOf("#");=0A=
 var url=3Dl;=0A=
 if (dc) {=0A=
  a=3D_uES(_uGC(dc,"__utma=3D"+_udh+".",";"));=0A=
  b=3D_uES(_uGC(dc,"__utmb=3D"+_udh,";"));=0A=
  c=3D_uES(_uGC(dc,"__utmc=3D"+_udh,";"));=0A=
  x=3D_uES(_uGC(dc,"__utmx=3D"+_udh,";"));=0A=
  z=3D_uES(_uGC(dc,"__utmz=3D"+_udh+".",";"));=0A=
  v=3D_uES(_uGC(dc,"__utmv=3D"+_udh+".",";"));=0A=
  k=3D(_uHash(a+b+c+x+z+v)*1)+(_udh*1);=0A=
  =
p=3D"__utma=3D"+a+"&__utmb=3D"+b+"&__utmc=3D"+c+"&__utmx=3D"+x+"&__utmz=3D=
"+z+"&__utmv=3D"+v+"&__utmk=3D"+k;=0A=
 }=0A=
 if (p) {=0A=
  if (h && ih>-1) return;=0A=
  if (h) { url=3Dl+"#"+p; }=0A=
  else {=0A=
   if (iq=3D=3D-1 && ih=3D=3D-1) url=3Dl+"?"+p;=0A=
   else if (ih=3D=3D-1) url=3Dl+"&"+p;=0A=
   else if (iq=3D=3D-1) url=3Dl.substring(0,ih-1)+"?"+p+l.substring(ih);=0A=
   else url=3Dl.substring(0,ih-1)+"&"+p+l.substring(ih);=0A=
  }=0A=
 }=0A=
 return url;=0A=
}=0A=
function __utmLinker(l,h) {=0A=
 if (!_ulink || !l || l=3D=3D"") return;=0A=
 _udl.href=3D__utmLinkerUrl(l,h);=0A=
}=0A=
function __utmLinkPost(f,h) {=0A=
 if (!_ulink || !f || !f.action) return;=0A=
 f.action=3D__utmLinkerUrl(f.action, h);=0A=
 return;=0A=
}=0A=
function __utmSetVar(v) {=0A=
 if (!v || v=3D=3D"") return;=0A=
 if (!_udo || _udo =3D=3D "") {=0A=
  _udh=3D_uDomain();=0A=
  if (_udn && _udn!=3D"") { _udo=3D" domain=3D"+_udn+";"; }=0A=
 }=0A=
 if (!_uVG()) return;=0A=
 var r=3DMath.round(Math.random() * 2147483647);=0A=
 _ubd.cookie=3D"__utmv=3D"+_udh+"."+_uES(v)+"; path=3D"+_utcp+"; =
expires=3D"+_uNx()+";"+_udo;=0A=
 var s=3D"&utmt=3Dvar&utmn=3D"+r;=0A=
 if (_usample && _usample !=3D 100) s+=3D"&utmsp=3D"+_uES(_usample);=0A=
 if ((_userv=3D=3D0 || _userv=3D=3D2) && _uSP()) {=0A=
  var i=3Dnew Image(1,1);=0A=
  i.src=3D_ugifpath+"?"+"utmwv=3D"+_uwv+s;=0A=
  i.onload=3Dfunction() { _uVoid(); }=0A=
 }=0A=
 if ((_userv=3D=3D1 || _userv=3D=3D2) && _uSP()) {=0A=
  var i2=3Dnew Image(1,1);=0A=
  =
i2.src=3D_ugifpath2+"?"+"utmwv=3D"+_uwv+s+"&utmac=3D"+_uacct+"&utmcc=3D"+=
_uGCS();=0A=
  i2.onload=3Dfunction() { _uVoid(); }=0A=
 }=0A=
}=0A=
function _uGCS() {=0A=
 var t,c=3D"",dc=3D_ubd.cookie;=0A=
 if ((t=3D_uGC(dc,"__utma=3D"+_udh+".",";"))!=3D"-") =
c+=3D_uES("__utma=3D"+t+";+");=0A=
 if ((t=3D_uGC(dc,"__utmx=3D"+_udh,";"))!=3D"-") =
c+=3D_uES("__utmx=3D"+t+";+");=0A=
 if ((t=3D_uGC(dc,"__utmz=3D"+_udh+".",";"))!=3D"-") =
c+=3D_uES("__utmz=3D"+t+";+");=0A=
 if ((t=3D_uGC(dc,"__utmv=3D"+_udh+".",";"))!=3D"-") =
c+=3D_uES("__utmv=3D"+t+";");=0A=
 if (c.charAt(c.length-1)=3D=3D"+") c=3Dc.substring(0,c.length-1);=0A=
 return c;=0A=
}=0A=
function _uGC(l,n,s) {=0A=
 if (!l || l=3D=3D"" || !n || n=3D=3D"" || !s || s=3D=3D"") return "-";=0A=
 var i,i2,i3,c=3D"-";=0A=
 i=3Dl.indexOf(n);=0A=
 i3=3Dn.indexOf("=3D")+1;=0A=
 if (i > -1) {=0A=
  i2=3Dl.indexOf(s,i); if (i2 < 0) { i2=3Dl.length; }=0A=
  c=3Dl.substring((i+i3),i2);=0A=
 }=0A=
 return c;=0A=
}=0A=
function _uDomain() {=0A=
 if (!_udn || _udn=3D=3D"" || _udn=3D=3D"none") { _udn=3D""; return 1; }=0A=
 if (_udn=3D=3D"auto") {=0A=
  var d=3D_ubd.domain;=0A=
  if (d.substring(0,4)=3D=3D"www.") {=0A=
   d=3Dd.substring(4,d.length);=0A=
  }=0A=
  _udn=3Dd;=0A=
 }=0A=
 _udn =3D _udn.toLowerCase(); =0A=
 if (_uhash=3D=3D"off") return 1;=0A=
 return _uHash(_udn);=0A=
}=0A=
function _uHash(d) {=0A=
 if (!d || d=3D=3D"") return 1;=0A=
 var h=3D0,g=3D0;=0A=
 for (var i=3Dd.length-1;i>=3D0;i--) {=0A=
  var c=3DparseInt(d.charCodeAt(i));=0A=
  h=3D((h << 6) & 0xfffffff) + c + (c << 14);=0A=
  if ((g=3Dh & 0xfe00000)!=3D0) h=3D(h ^ (g >> 21));=0A=
 }=0A=
 return h;=0A=
}=0A=
function _uFixA(c,s,t) {=0A=
 if (!c || c=3D=3D"" || !s || s=3D=3D"" || !t || t=3D=3D"") return "-";=0A=
 var a=3D_uGC(c,"__utma=3D"+_udh+".",s);=0A=
 var lt=3D0,i=3D0;=0A=
 if ((i=3Da.lastIndexOf(".")) > 9) {=0A=
  _uns=3Da.substring(i+1,a.length);=0A=
  _uns=3D(_uns*1)+1;=0A=
  a=3Da.substring(0,i);=0A=
  if ((i=3Da.lastIndexOf(".")) > 7) {=0A=
   lt=3Da.substring(i+1,a.length);=0A=
   a=3Da.substring(0,i);=0A=
  }=0A=
  if ((i=3Da.lastIndexOf(".")) > 5) {=0A=
   a=3Da.substring(0,i);=0A=
  }=0A=
  a+=3D"."+lt+"."+t+"."+_uns;=0A=
 }=0A=
 return a;=0A=
}=0A=
function _uTrim(s) {=0A=
  if (!s || s=3D=3D"") return "";=0A=
  while ((s.charAt(0)=3D=3D' ') || (s.charAt(0)=3D=3D'\n') || =
(s.charAt(0,1)=3D=3D'\r')) s=3Ds.substring(1,s.length);=0A=
  while ((s.charAt(s.length-1)=3D=3D' ') || =
(s.charAt(s.length-1)=3D=3D'\n') || (s.charAt(s.length-1)=3D=3D'\r')) =
s=3Ds.substring(0,s.length-1);=0A=
  return s;=0A=
}=0A=
function _uEC(s) {=0A=
  var n=3D"";=0A=
  if (!s || s=3D=3D"") return "";=0A=
  for (var i=3D0;i<s.length;i++) {if (s.charAt(i)=3D=3D" ") n+=3D"+"; =
else n+=3Ds.charAt(i);}=0A=
  return n;=0A=
}=0A=
function __utmVisitorCode(f) {=0A=
 var r=3D0,t=3D0,i=3D0,i2=3D0,m=3D31;=0A=
 var a=3D_uGC(_ubd.cookie,"__utma=3D"+_udh+".",";");=0A=
 if ((i=3Da.indexOf(".",0))<0) return;=0A=
 if ((i2=3Da.indexOf(".",i+1))>0) r=3Da.substring(i+1,i2); else return =
"";  =0A=
 if ((i=3Da.indexOf(".",i2+1))>0) t=3Da.substring(i2+1,i); else return =
"";  =0A=
 if (f) {=0A=
  return r;=0A=
 } else {=0A=
  var c=3Dnew =
Array('A','B','C','D','E','F','G','H','J','K','L','M','N','P','R','S','T'=
,'U','V','W','X','Y','Z','1','2','3','4','5','6','7','8','9');=0A=
  return =
c[r>>28&m]+c[r>>23&m]+c[r>>18&m]+c[r>>13&m]+"-"+c[r>>8&m]+c[r>>3&m]+c[((r=
&7)<<2)+(t>>30&3)]+c[t>>25&m]+c[t>>20&m]+"-"+c[t>>15&m]+c[t>>10&m]+c[t>>5=
&m]+c[t&m];=0A=
 }=0A=
}=0A=
function _uIN(n) {=0A=
 if (!n) return false;=0A=
 for (var i=3D0;i<n.length;i++) {=0A=
  var c=3Dn.charAt(i);=0A=
  if ((c<"0" || c>"9") && (c!=3D".")) return false;=0A=
 }=0A=
 return true;=0A=
}=0A=
function _uES(s,u) {=0A=
 if (typeof(encodeURIComponent) =3D=3D 'function') {=0A=
  if (u) return encodeURI(s);=0A=
  else return encodeURIComponent(s);=0A=
 } else {=0A=
  return escape(s);=0A=
 }=0A=
}=0A=
function _uUES(s) {=0A=
 if (typeof(decodeURIComponent) =3D=3D 'function') {=0A=
  return decodeURIComponent(s);=0A=
 } else {=0A=
  return unescape(s);=0A=
 }=0A=
}=0A=
function _uVG() {=0A=
 if((_udn.indexOf("www.google.") =3D=3D 0 || _udn.indexOf(".google.") =
=3D=3D 0 || _udn.indexOf("google.") =3D=3D 0) && _utcp=3D=3D'/' && =
_udn.indexOf("google.org")=3D=3D-1) {=0A=
  return false;=0A=
 }=0A=
 return true;=0A=
}=0A=
function _uSP() {=0A=
 var s=3D100;=0A=
 if (_usample) s=3D_usample;=0A=
 if(s>=3D100 || s<=3D0) return true;=0A=
 return ((__utmVisitorCode(1)%10000)<(s*100));=0A=
}=0A=
function urchinPathCopy(p){=0A=
 var d=3Ddocument,nx,tx,sx,i,c,cs,t,h,o;=0A=
 cs=3Dnew Array("a","b","c","v","x","z");=0A=
 h=3D_uDomain(); if (_udn && _udn!=3D"") o=3D" domain=3D"+_udn+";";=0A=
 nx=3D_uNx()+";";=0A=
 tx=3Dnew Date(); tx.setTime(tx.getTime()+(_utimeout*1000));=0A=
 tx=3Dtx.toGMTString()+";";=0A=
 sx=3Dnew Date(); sx.setTime(sx.getTime()+(_ucto*1000));=0A=
 sx=3Dsx.toGMTString()+";";=0A=
 for (i=3D0;i<6;i++){=0A=
  t=3D" expires=3D";=0A=
  if (i=3D=3D1) t+=3Dtx; else if (i=3D=3D2) t=3D""; else if (i=3D=3D5) =
t+=3Dsx; else t+=3Dnx;=0A=
  c=3D_uGC(d.cookie,"__utm"+cs[i]+"=3D"+h,";");=0A=
  if (c!=3D"-") d.cookie=3D"__utm"+cs[i]+"=3D"+c+"; path=3D"+p+";"+t+o;=0A=
 }=0A=
}=0A=
function _uCO() {=0A=
 if (!_utk || _utk=3D=3D"" || _utk.length<10) return;=0A=
 var d=3D'www.google.com';=0A=
 if (_utk.charAt(0)=3D=3D'!') d=3D'analytics.corp.google.com';=0A=
 _ubd.cookie=3D"GASO=3D"+_utk+"; path=3D"+_utcp+";"+_udo;=0A=
 var sc=3Ddocument.createElement('script');=0A=
 sc.type=3D'text/javascript';=0A=
 sc.id=3D"_gasojs";=0A=
 =
sc.src=3D'https://'+d+'/analytics/reporting/overlay_js?gaso=3D'+_utk+'&'+=
Math.random();=0A=
 document.getElementsByTagName('head')[0].appendChild(sc);  =0A=
}=0A=
function _uGT() {=0A=
 var h=3Dlocation.hash, a;=0A=
 if (h && h!=3D"" && h.indexOf("#gaso=3D")=3D=3D0) {=0A=
  a=3D_uGC(h,"gaso=3D","&");=0A=
 } else {=0A=
  a=3D_uGC(_ubd.cookie,"GASO=3D",";");=0A=
 }=0A=
 return a;=0A=
}=0A=
var _utk=3D_uGT();=0A=
if (_utk && _utk!=3D"" && _utk.length>10 && _utk.indexOf("=3D")=3D=3D-1) =
{=0A=
 if (window.addEventListener) {=0A=
  window.addEventListener('load', _uCO, false); =0A=
 } else if (window.attachEvent) { =0A=
  window.attachEvent('onload', _uCO);=0A=
 }=0A=
}=0A=
=0A=
function _uNx() {=0A=
  return (new Date((new Date()).getTime()+63072000000)).toGMTString();=0A=
}=0A=

------=_NextPart_000_0000_01CBC64C.068E6300--
